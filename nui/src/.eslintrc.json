{
    "env" : {
        "browser" : true,
        "es2021" : true
    },
    "extends" : [
        "eslint:recommended", "plugin:@typescript-eslint/recommended"
    ],
    "parser" : "@typescript-eslint/parser",
    "parserOptions" : {
        "ecmaVersion" : 12,
        "sourceType" : "module",
        "project" : [ "tsconfig.json" ]
    },
    "plugins" : [
        "@typescript-eslint"
    ],
    "rules" : {
        
        "@typescript-eslint/adjacent-overload-signatures" : "error",
        "@typescript-eslint/no-base-to-string" : "error",
        "@typescript-eslint/no-dynamic-delete" : "error",
        "@typescript-eslint/no-extraneous-class" : "error",
        "@typescript-eslint/no-inferrable-types" : "off",
        "@typescript-eslint/no-floating-promises" : "error",
        "@typescript-eslint/no-invalid-void-type" : "error",
        "@typescript-eslint/unified-signatures" : "warn",
        "@typescript-eslint/switch-exhaustiveness-check" : "error",
        "@typescript-eslint/require-array-sort-compare" : "error",
        "@typescript-eslint/restrict-plus-operands" : [
            "error", {
                "checkCompoundAssignments" : true
            }
        ],
        "@typescript-eslint/type-annotation-spacing" : [
            "error", {
                "before" : false,
                "after" : true,
                "overrides" : {
                    "arrow" : {
                        "before" : true,
                        "after" : true
                    }
                }
            }
        ],
        "@typescript-eslint/restrict-template-expressions" : [
            "error", {
                "allowNumber" : true,
                "allowBoolean" : true,
                "allowAny" : false,
                "allowNullish" : false
            }
        ],
        "@typescript-eslint/no-unnecessary-condition" : [
            "error", {
                "allowConstantLoopConditions" : false,
                "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing" : true
            }
        ],
        "@typescript-eslint/prefer-function-type" : "error",
        "@typescript-eslint/prefer-includes" : "error",
        "@typescript-eslint/prefer-string-starts-ends-with" : "error",
        "@typescript-eslint/prefer-reduce-type-parameter" : "error",
        "@typescript-eslint/prefer-readonly" : "warn",
        "@typescript-eslint/prefer-optional-chain" : "error",
        "@typescript-eslint/prefer-nullish-coalescing" : [
            "error", {
                "ignoreConditionalTests" : false,
                "ignoreMixedLogicalExpressions" : false
            }
        ],
        "@typescript-eslint/prefer-literal-enum-member" : "error",
        "@typescript-eslint/non-nullable-type-assertion-style" : "error",
        "@typescript-eslint/no-unnecessary-type-constraint" : "error",
        "@typescript-eslint/no-unnecessary-type-arguments" : "error",
        "@typescript-eslint/no-unnecessary-type-assertion" : "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare" : "error",
        "@typescript-eslint/no-misused-new" : "error",
        "@typescript-eslint/no-implicit-any-catch" : [
            "error", {
                "allowExplicitAny" : true
            }
        ],
        "@typescript-eslint/no-confusing-non-null-assertion" : "error",
        "@typescript-eslint/array-type" : [
            "error", {
                "default" : "array"
            }
        ],
        "@typescript-eslint/consistent-indexed-object-style" : [ "error", "record" ],
        "@typescript-eslint/consistent-type-assertions" : [
            "error", {
                "assertionStyle" : "as",
                "objectLiteralTypeAssertions" : "never"
            }
        ],
        "@typescript-eslint/consistent-type-definitions" : [ "error", "interface" ],
        "@typescript-eslint/method-signature-style" : [ "error", "method" ],
        
        "@typescript-eslint/naming-convention" : [
            "error", {
                "selector" : "default",
                "format" : [ "camelCase" ],
                "leadingUnderscore" : "allow",
                "trailingUnderscore" : "allow"
            }, {
                "selector" : "variable",
                "modifiers" : [ "const" ],
                "format" : [ "camelCase", "UPPER_CASE" ],
                "leadingUnderscore" : "allow",
                "trailingUnderscore" : "allow"
            }, {
                "selector" : "typeLike",
                "format" : [ "PascalCase" ]
            }, {
                "selector" : [ "classProperty", "parameterProperty" ],
                "modifiers" : [ "public", "static", "readonly" ],
                "format" : [ "UPPER_CASE" ],
                "leadingUnderscore" : "forbid"
            }, {
                "selector" : [ "classProperty", "parameterProperty" ],
                "modifiers" : [ "public", "static" ],
                "format" : [ "camelCase" ],
                "leadingUnderscore" : "forbid"
            }, {
                "selector" : [ "classProperty", "parameterProperty" ],
                "modifiers" : [ "private", "static" ],
                "format" : [ "camelCase" ],
                "leadingUnderscore" : "forbid"
            }, {
                "selector" : [ "classProperty", "parameterProperty" ],
                "modifiers" : [ "protected", "static" ],
                "format" : [ "camelCase" ],
                "leadingUnderscore" : "forbid"
            }, {
                "selector" : [ "classProperty", "parameterProperty" ],
                "modifiers" : [ "private", "static", "readonly" ],
                "format" : [ "UPPER_CASE" ],
                "leadingUnderscore" : "forbid"
            }, {
                "selector" : [ "classProperty", "parameterProperty" ],
                "modifiers" : [ "protected", "static", "readonly" ],
                "format" : [ "UPPER_CASE" ],
                "leadingUnderscore" : "forbid"
            }, {
                "selector" : [ "classProperty", "parameterProperty" ],
                "modifiers" : [ "public" ],
                "format" : [ "camelCase" ],
                "prefix" : [ "m_" ],
                "leadingUnderscore" : "forbid"
            }, {
                "selector" : [ "property", "parameterProperty" ],
                "modifiers" : [ "private" ],
                "format" : [ "camelCase" ],
                "prefix" : [ "m_" ],
                "leadingUnderscore" : "forbid"
            }, {
                "selector" : [ "property", "parameterProperty" ],
                "modifiers" : [ "protected" ],
                "format" : [ "camelCase" ],
                "prefix" : [ "m_" ],
                "leadingUnderscore" : "forbid"
            }, {
                "selector" : "interface",
                "format" : [ "PascalCase" ],
                "prefix" : [ "I" ],
                "leadingUnderscore" : "forbid"
            }, {
                "selector" : "typeParameter",
                "format" : [ "PascalCase" ],
                "leadingUnderscore" : "forbid",
                "trailingUnderscore" : "forbid"
            }, {
                "selector" : "enumMember",
                "format" : [ "UPPER_CASE" ],
                "leadingUnderscore" : "forbid",
                "trailingUnderscore" : "forbid"
            }
        
        ],
        
        "@typescript-eslint/consistent-type-imports" : [
            "error", {
                "prefer" : "type-imports",
                "disallowTypeAnnotations" : true
            }
        ],
        
        "@typescript-eslint/explicit-function-return-type" : [
            "error", {
                "allowExpressions" : true,
                "allowTypedFunctionExpressions" : false,
                "allowHigherOrderFunctions" : false,
                "allowDirectConstAssertionInArrowFunctions" : false,
                "allowConciseArrowFunctionExpressionsStartingWithVoid" : false
            }
        ],
        
        "@typescript-eslint/explicit-member-accessibility" : [
            "error", {
                "accessibility" : "explicit",
                "overrides" : {
                    "accessors" : "explicit",
                    "constructors" : "no-public",
                    "methods" : "explicit",
                    "properties" : "explicit",
                    "parameterProperties" : "explicit"
                }
            }
        ],
        "@typescript-eslint/member-delimiter-style" : [
            "error", {
                "multiline" : {
                    "delimiter" : "semi",
                    "requireLast" : true
                },
                "singleline" : {
                    "delimiter" : "semi",
                    "requireLast" : true
                },
                "multilineDetection" : "brackets"
            }
        ],
        "@typescript-eslint/explicit-module-boundary-types" : [
            "error", {
                "allowArgumentsExplicitlyTypedAsAny" : false,
                "allowDirectConstAssertionInArrowFunctions" : false,
                "allowHigherOrderFunctions" : false,
                "allowTypedFunctionExpressions" : false
            }
        ],
        
        "array-bracket-newline" : [
            "error", {
                "multiline" : true
            }
        ],
        "array-bracket-spacing" : [ "error", "never" ],
        "array-element-newline" : [
            "error", {
                "ArrayExpression" : {
                    "multiline" : true
                },
                
                "ArrayPattern" : {
                    "multiline" : true
                }
            }
        ],
        "arrow-body-style" : "error",
        "arrow-parens" : [
            "error", "as-needed", {
                "requireForBlockBody" : true
            }
        ],
        "arrow-spacing" : "error",
        "block-spacing" : "error",
        "brace-style" : [
            "error", "1tbs", {
                "allowSingleLine" : true
            }
        ],
        "@typescript-eslint/brace-style" : [
            "error", "1tbs", {
                "allowSingleLine" : true
            }
        ],
        "class-methods-use-this" : "error",
        "comma-dangle" : "error",
        "@typescript-eslint/comma-dangle" : "error",
        "comma-spacing" : "error",
        "@typescript-eslint/comma-spacing" : "error",
        "comma-style" : "error",
        "computed-property-spacing" : "error",
        "consistent-return" : "error",
        "no-fallthrough" : "off",
        "curly" : [ "error", "all" ],
        "default-case" : "error",
        "default-case-last" : "error",
        "default-param-last" : "error",
        "@typescript-eslint/default-param-last" : "error",
        "dot-location" : "error",
        "eqeqeq" : [
            "error", "always", {
                "null" : "never"
            }
        ],
        "func-call-spacing" : "error",
        "@typescript-eslint/func-call-spacing" : "error",
        "func-style" : [
            "error", "declaration", {
                "allowArrowFunctions" : true
            }
        ],
        "function-call-argument-newline" : [ "error", "never" ],
        "function-paren-newline" : [ "error", "never" ],
        "getter-return" : [
            "error"
        ],
        "grouped-accessor-pairs" : [ "error", "getBeforeSet" ],
        "guard-for-in" : "error",
        "implicit-arrow-linebreak" : "error",
        "indent" : [
            "error", 4, {
                "SwitchCase" : 1,
                "VariableDeclarator" : 1,
                "outerIIFEBody" : 1,
                "MemberExpression" : 1,
                "FunctionDeclaration" : {
                    "parameters" : "first"
                },
                "FunctionExpression" : {
                    "parameters" : "first"
                },
                "ArrayExpression" : 1,
                "ObjectExpression" : 1,
                "ImportDeclaration" : 1,
                "flatTernaryExpressions" : true,
                "offsetTernaryExpressions" : false
            }
        ],
        "@typescript-eslint/indent" : [
            "error", 4, {
                "SwitchCase" : 1,
                "VariableDeclarator" : 1,
                "outerIIFEBody" : 1,
                "MemberExpression" : 1,
                "FunctionDeclaration" : {
                    "parameters" : "first"
                },
                "FunctionExpression" : {
                    "parameters" : "first"
                },
                "ArrayExpression" : 1,
                "ObjectExpression" : 1,
                "ImportDeclaration" : 1,
                "flatTernaryExpressions" : true,
                "offsetTernaryExpressions" : false
            }
        ],
        "key-spacing" : [
            "error", {
                "beforeColon" : true,
                "afterColon" : true,
                "mode" : "strict"
            }
        ],
        "keyword-spacing" : "error",
        "@typescript-eslint/keyword-spacing" : "error",
        "linebreak-style" : [
            "error", "windows"
        ],
        "max-classes-per-file" : [ "error", 1 ],
        "multiline-ternary" : [ "error", "always-multiline" ],
        "new-cap" : [
            "error", {
                "newIsCap" : true,
                "capIsNew" : false
            }
        ],
        "new-parens" : "error",
        "no-alert" : "error",
        "no-caller" : "error",
        "no-undef" : "off",
        "no-constant-condition" : "error",
        "no-constructor-return" : "error",
        "no-else-return" : "error",
        "no-label-var" : "error",
        "no-lone-blocks" : "error",
        "no-lonely-if" : "warn",
        "no-multi-spaces" : "error",
        "no-multi-str" : "error",
        "no-multiple-empty-lines" : [
            "warn", {
                "max" : 1
            }
        ],
        "no-new-func" : "error",
        "no-new-object" : "error",
        "no-new-wrappers" : "error",
        "no-promise-executor-return" : "error",
        "no-proto" : "error",
        "no-return-await" : "error",
        "no-self-assign" : "error",
        "no-throw-literal" : "error",
        "@typescript-eslint/no-throw-literal" : "error",
        "no-trailing-spaces" : [
            "error", {
                "skipBlankLines" : true
            }
        ],
        "no-unmodified-loop-condition" : "error",
        "no-unneeded-ternary" : "warn",
        "no-unreachable-loop" : "error",
        "no-useless-call" : "error",
        "no-useless-computed-key" : "error",
        "no-useless-escape" : "warn",
        "no-useless-rename" : [
            "error", {
                "ignoreDestructuring" : true,
                "ignoreImport" : false,
                "ignoreExport" : false
            }
        ],
        "no-useless-return" : "error",
        "no-void" : "error",
        "no-whitespace-before-property" : "error",
        "object-curly-newline" : [
            "error", {
                "ObjectExpression" : {
                    "consistent" : true
                },
                "ObjectPattern" : {
                    "multiline" : true
                },
                "ImportDeclaration" : "never",
                "ExportDeclaration" : {
                    "multiline" : true,
                    "minProperties" : 5
                }
            }
        ],
        "object-curly-spacing" : [ "error", "always" ],
        "object-property-newline" : "error",
        "object-shorthand" : "error",
        "one-var" : [
            "error", {
                "initialized" : "never",
                "uninitialized" : "consecutive"
            }
        ],
        "operator-linebreak" : [ "error", "none" ],
        "padded-blocks" : [
            "error", {
                "classes" : "always",
                "blocks" : "never",
                "switches" : "never"
            }
        ],
        "padding-line-between-statements" : [
            "error", {
                "blankLine" : "always",
                "prev" : "directive",
                "next" : "*"
            }, {
                "blankLine" : "any",
                "prev" : "directive",
                "next" : "directive"
            }
        
        ],
        "prefer-arrow-callback" : "error",
        "prefer-destructuring" : [
            "error", {
                "array" : true,
                "object" : true
            }, {
                "enforceForRenamedProperties" : false
            }
        ],
        "prefer-exponentiation-operator" : "error",
        "prefer-numeric-literals" : "error",
        "prefer-object-spread" : "error",
        "prefer-promise-reject-errors" : "error",
        "prefer-rest-params" : "error",
        "prefer-spread" : "error",
        "prefer-template" : "error",
        "quote-props" : [ "error", "consistent-as-needed" ],
        "quotes" : [
            "error", "double"
        ],
        "@typescript-eslint/quotes" : [
            "error", "double"
        ],
        "require-atomic-updates" : "error",
        "require-await" : "error",
        "@typescript-eslint/require-await" : "error",
        
        "rest-spread-spacing" : [ "error", "always" ],
        "semi" : [
            "error", "always"
        ],
        "@typescript-eslint/semi" : [
            "error", "always"
        ],
        "semi-style" : "error",
        "space-before-blocks" : "error",
        "space-before-function-paren" : [
            "error", {
                "anonymous" : "ignore",
                "named" : "never",
                "asyncArrow" : "always"
            }
        ],
        "@typescript-eslint/space-before-function-paren" : [
            "error", {
                "anonymous" : "ignore",
                "named" : "never",
                "asyncArrow" : "always"
            }
        ],
        "space-in-parens" : "error",
        "space-infix-ops" : [
            "error", {
                "int32Hint" : false
            }
        ],
        "@typescript-eslint/space-infix-ops" : [
            "error", {
                "int32Hint" : false
            }
        ],
        "space-unary-ops" : [
            "error", {
                "words" : true,
                "nonwords" : false
            }
        ],
        "switch-colon-spacing" : "error",
        "template-curly-spacing" : "error",
        "template-tag-spacing" : "error",
        "unicode-bom" : "error",
        "yoda" : "error",
        "no-irregular-whitespace" : [
            "error", {
                "skipStrings" : true,
                "skipTemplates" : true,
                "skipComments" : true
            }
        ]
    }
}