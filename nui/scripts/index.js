/*! For license information please see index.js.LICENSE.txt */
(()=>{var e={550:e=>{"use strict";e.exports=JSON.parse('{"100":"💯","1234":"🔢","grinning":"😀","smiley":"😃","smile":"😄","grin":"😁","laughing":"😆","satisfied":"😆","sweat_smile":"😅","rofl":"🤣","joy":"😂","slightly_smiling_face":"🙂","upside_down_face":"🙃","wink":"😉","blush":"😊","innocent":"😇","smiling_face_with_three_hearts":"🥰","heart_eyes":"😍","star_struck":"🤩","kissing_heart":"😘","kissing":"😗","relaxed":"☺️","kissing_closed_eyes":"😚","kissing_smiling_eyes":"😙","smiling_face_with_tear":"🥲","yum":"😋","stuck_out_tongue":"😛","stuck_out_tongue_winking_eye":"😜","zany_face":"🤪","stuck_out_tongue_closed_eyes":"😝","money_mouth_face":"🤑","hugs":"🤗","hand_over_mouth":"🤭","shushing_face":"🤫","thinking":"🤔","zipper_mouth_face":"🤐","raised_eyebrow":"🤨","neutral_face":"😐","expressionless":"😑","no_mouth":"😶","smirk":"😏","unamused":"😒","roll_eyes":"🙄","grimacing":"😬","lying_face":"🤥","relieved":"😌","pensive":"😔","sleepy":"😪","drooling_face":"🤤","sleeping":"😴","mask":"😷","face_with_thermometer":"🤒","face_with_head_bandage":"🤕","nauseated_face":"🤢","vomiting_face":"🤮","sneezing_face":"🤧","hot_face":"🥵","cold_face":"🥶","woozy_face":"🥴","dizzy_face":"😵","exploding_head":"🤯","cowboy_hat_face":"🤠","partying_face":"🥳","disguised_face":"🥸","sunglasses":"😎","nerd_face":"🤓","monocle_face":"🧐","confused":"😕","worried":"😟","slightly_frowning_face":"🙁","frowning_face":"☹️","open_mouth":"😮","hushed":"😯","astonished":"😲","flushed":"😳","pleading_face":"🥺","frowning":"😦","anguished":"😧","fearful":"😨","cold_sweat":"😰","disappointed_relieved":"😥","cry":"😢","sob":"😭","scream":"😱","confounded":"😖","persevere":"😣","disappointed":"😞","sweat":"😓","weary":"😩","tired_face":"😫","yawning_face":"🥱","triumph":"😤","rage":"😡","pout":"😡","angry":"😠","cursing_face":"🤬","smiling_imp":"😈","imp":"👿","skull":"💀","skull_and_crossbones":"☠️","hankey":"💩","poop":"💩","shit":"💩","clown_face":"🤡","japanese_ogre":"👹","japanese_goblin":"👺","ghost":"👻","alien":"👽","space_invader":"👾","robot":"🤖","smiley_cat":"😺","smile_cat":"😸","joy_cat":"😹","heart_eyes_cat":"😻","smirk_cat":"😼","kissing_cat":"😽","scream_cat":"🙀","crying_cat_face":"😿","pouting_cat":"😾","see_no_evil":"🙈","hear_no_evil":"🙉","speak_no_evil":"🙊","kiss":"💋","love_letter":"💌","cupid":"💘","gift_heart":"💝","sparkling_heart":"💖","heartpulse":"💗","heartbeat":"💓","revolving_hearts":"💞","two_hearts":"💕","heart_decoration":"💟","heavy_heart_exclamation":"❣️","broken_heart":"💔","heart":"❤️","orange_heart":"🧡","yellow_heart":"💛","green_heart":"💚","blue_heart":"💙","purple_heart":"💜","brown_heart":"🤎","black_heart":"🖤","white_heart":"🤍","anger":"💢","boom":"💥","collision":"💥","dizzy":"💫","sweat_drops":"💦","dash":"💨","hole":"🕳️","bomb":"💣","speech_balloon":"💬","eye_speech_bubble":"👁️‍🗨️","left_speech_bubble":"🗨️","right_anger_bubble":"🗯️","thought_balloon":"💭","zzz":"💤","wave":"👋","raised_back_of_hand":"🤚","raised_hand_with_fingers_splayed":"🖐️","hand":"✋","raised_hand":"✋","vulcan_salute":"🖖","ok_hand":"👌","pinched_fingers":"🤌","pinching_hand":"🤏","v":"✌️","crossed_fingers":"🤞","love_you_gesture":"🤟","metal":"🤘","call_me_hand":"🤙","point_left":"👈","point_right":"👉","point_up_2":"👆","middle_finger":"🖕","fu":"🖕","point_down":"👇","point_up":"☝️","+1":"👍","thumbsup":"👍","-1":"👎","thumbsdown":"👎","fist_raised":"✊","fist":"✊","fist_oncoming":"👊","facepunch":"👊","punch":"👊","fist_left":"🤛","fist_right":"🤜","clap":"👏","raised_hands":"🙌","open_hands":"👐","palms_up_together":"🤲","handshake":"🤝","pray":"🙏","writing_hand":"✍️","nail_care":"💅","selfie":"🤳","muscle":"💪","mechanical_arm":"🦾","mechanical_leg":"🦿","leg":"🦵","foot":"🦶","ear":"👂","ear_with_hearing_aid":"🦻","nose":"👃","brain":"🧠","anatomical_heart":"🫀","lungs":"🫁","tooth":"🦷","bone":"🦴","eyes":"👀","eye":"👁️","tongue":"👅","lips":"👄","baby":"👶","child":"🧒","boy":"👦","girl":"👧","adult":"🧑","blond_haired_person":"👱","man":"👨","bearded_person":"🧔","red_haired_man":"👨‍🦰","curly_haired_man":"👨‍🦱","white_haired_man":"👨‍🦳","bald_man":"👨‍🦲","woman":"👩","red_haired_woman":"👩‍🦰","person_red_hair":"🧑‍🦰","curly_haired_woman":"👩‍🦱","person_curly_hair":"🧑‍🦱","white_haired_woman":"👩‍🦳","person_white_hair":"🧑‍🦳","bald_woman":"👩‍🦲","person_bald":"🧑‍🦲","blond_haired_woman":"👱‍♀️","blonde_woman":"👱‍♀️","blond_haired_man":"👱‍♂️","older_adult":"🧓","older_man":"👴","older_woman":"👵","frowning_person":"🙍","frowning_man":"🙍‍♂️","frowning_woman":"🙍‍♀️","pouting_face":"🙎","pouting_man":"🙎‍♂️","pouting_woman":"🙎‍♀️","no_good":"🙅","no_good_man":"🙅‍♂️","ng_man":"🙅‍♂️","no_good_woman":"🙅‍♀️","ng_woman":"🙅‍♀️","ok_person":"🙆","ok_man":"🙆‍♂️","ok_woman":"🙆‍♀️","tipping_hand_person":"💁","information_desk_person":"💁","tipping_hand_man":"💁‍♂️","sassy_man":"💁‍♂️","tipping_hand_woman":"💁‍♀️","sassy_woman":"💁‍♀️","raising_hand":"🙋","raising_hand_man":"🙋‍♂️","raising_hand_woman":"🙋‍♀️","deaf_person":"🧏","deaf_man":"🧏‍♂️","deaf_woman":"🧏‍♀️","bow":"🙇","bowing_man":"🙇‍♂️","bowing_woman":"🙇‍♀️","facepalm":"🤦","man_facepalming":"🤦‍♂️","woman_facepalming":"🤦‍♀️","shrug":"🤷","man_shrugging":"🤷‍♂️","woman_shrugging":"🤷‍♀️","health_worker":"🧑‍⚕️","man_health_worker":"👨‍⚕️","woman_health_worker":"👩‍⚕️","student":"🧑‍🎓","man_student":"👨‍🎓","woman_student":"👩‍🎓","teacher":"🧑‍🏫","man_teacher":"👨‍🏫","woman_teacher":"👩‍🏫","judge":"🧑‍⚖️","man_judge":"👨‍⚖️","woman_judge":"👩‍⚖️","farmer":"🧑‍🌾","man_farmer":"👨‍🌾","woman_farmer":"👩‍🌾","cook":"🧑‍🍳","man_cook":"👨‍🍳","woman_cook":"👩‍🍳","mechanic":"🧑‍🔧","man_mechanic":"👨‍🔧","woman_mechanic":"👩‍🔧","factory_worker":"🧑‍🏭","man_factory_worker":"👨‍🏭","woman_factory_worker":"👩‍🏭","office_worker":"🧑‍💼","man_office_worker":"👨‍💼","woman_office_worker":"👩‍💼","scientist":"🧑‍🔬","man_scientist":"👨‍🔬","woman_scientist":"👩‍🔬","technologist":"🧑‍💻","man_technologist":"👨‍💻","woman_technologist":"👩‍💻","singer":"🧑‍🎤","man_singer":"👨‍🎤","woman_singer":"👩‍🎤","artist":"🧑‍🎨","man_artist":"👨‍🎨","woman_artist":"👩‍🎨","pilot":"🧑‍✈️","man_pilot":"👨‍✈️","woman_pilot":"👩‍✈️","astronaut":"🧑‍🚀","man_astronaut":"👨‍🚀","woman_astronaut":"👩‍🚀","firefighter":"🧑‍🚒","man_firefighter":"👨‍🚒","woman_firefighter":"👩‍🚒","police_officer":"👮","cop":"👮","policeman":"👮‍♂️","policewoman":"👮‍♀️","detective":"🕵️","male_detective":"🕵️‍♂️","female_detective":"🕵️‍♀️","guard":"💂","guardsman":"💂‍♂️","guardswoman":"💂‍♀️","ninja":"🥷","construction_worker":"👷","construction_worker_man":"👷‍♂️","construction_worker_woman":"👷‍♀️","prince":"🤴","princess":"👸","person_with_turban":"👳","man_with_turban":"👳‍♂️","woman_with_turban":"👳‍♀️","man_with_gua_pi_mao":"👲","woman_with_headscarf":"🧕","person_in_tuxedo":"🤵","man_in_tuxedo":"🤵‍♂️","woman_in_tuxedo":"🤵‍♀️","person_with_veil":"👰","man_with_veil":"👰‍♂️","woman_with_veil":"👰‍♀️","bride_with_veil":"👰‍♀️","pregnant_woman":"🤰","breast_feeding":"🤱","woman_feeding_baby":"👩‍🍼","man_feeding_baby":"👨‍🍼","person_feeding_baby":"🧑‍🍼","angel":"👼","santa":"🎅","mrs_claus":"🤶","mx_claus":"🧑‍🎄","superhero":"🦸","superhero_man":"🦸‍♂️","superhero_woman":"🦸‍♀️","supervillain":"🦹","supervillain_man":"🦹‍♂️","supervillain_woman":"🦹‍♀️","mage":"🧙","mage_man":"🧙‍♂️","mage_woman":"🧙‍♀️","fairy":"🧚","fairy_man":"🧚‍♂️","fairy_woman":"🧚‍♀️","vampire":"🧛","vampire_man":"🧛‍♂️","vampire_woman":"🧛‍♀️","merperson":"🧜","merman":"🧜‍♂️","mermaid":"🧜‍♀️","elf":"🧝","elf_man":"🧝‍♂️","elf_woman":"🧝‍♀️","genie":"🧞","genie_man":"🧞‍♂️","genie_woman":"🧞‍♀️","zombie":"🧟","zombie_man":"🧟‍♂️","zombie_woman":"🧟‍♀️","massage":"💆","massage_man":"💆‍♂️","massage_woman":"💆‍♀️","haircut":"💇","haircut_man":"💇‍♂️","haircut_woman":"💇‍♀️","walking":"🚶","walking_man":"🚶‍♂️","walking_woman":"🚶‍♀️","standing_person":"🧍","standing_man":"🧍‍♂️","standing_woman":"🧍‍♀️","kneeling_person":"🧎","kneeling_man":"🧎‍♂️","kneeling_woman":"🧎‍♀️","person_with_probing_cane":"🧑‍🦯","man_with_probing_cane":"👨‍🦯","woman_with_probing_cane":"👩‍🦯","person_in_motorized_wheelchair":"🧑‍🦼","man_in_motorized_wheelchair":"👨‍🦼","woman_in_motorized_wheelchair":"👩‍🦼","person_in_manual_wheelchair":"🧑‍🦽","man_in_manual_wheelchair":"👨‍🦽","woman_in_manual_wheelchair":"👩‍🦽","runner":"🏃","running":"🏃","running_man":"🏃‍♂️","running_woman":"🏃‍♀️","woman_dancing":"💃","dancer":"💃","man_dancing":"🕺","business_suit_levitating":"🕴️","dancers":"👯","dancing_men":"👯‍♂️","dancing_women":"👯‍♀️","sauna_person":"🧖","sauna_man":"🧖‍♂️","sauna_woman":"🧖‍♀️","climbing":"🧗","climbing_man":"🧗‍♂️","climbing_woman":"🧗‍♀️","person_fencing":"🤺","horse_racing":"🏇","skier":"⛷️","snowboarder":"🏂","golfing":"🏌️","golfing_man":"🏌️‍♂️","golfing_woman":"🏌️‍♀️","surfer":"🏄","surfing_man":"🏄‍♂️","surfing_woman":"🏄‍♀️","rowboat":"🚣","rowing_man":"🚣‍♂️","rowing_woman":"🚣‍♀️","swimmer":"🏊","swimming_man":"🏊‍♂️","swimming_woman":"🏊‍♀️","bouncing_ball_person":"⛹️","bouncing_ball_man":"⛹️‍♂️","basketball_man":"⛹️‍♂️","bouncing_ball_woman":"⛹️‍♀️","basketball_woman":"⛹️‍♀️","weight_lifting":"🏋️","weight_lifting_man":"🏋️‍♂️","weight_lifting_woman":"🏋️‍♀️","bicyclist":"🚴","biking_man":"🚴‍♂️","biking_woman":"🚴‍♀️","mountain_bicyclist":"🚵","mountain_biking_man":"🚵‍♂️","mountain_biking_woman":"🚵‍♀️","cartwheeling":"🤸","man_cartwheeling":"🤸‍♂️","woman_cartwheeling":"🤸‍♀️","wrestling":"🤼","men_wrestling":"🤼‍♂️","women_wrestling":"🤼‍♀️","water_polo":"🤽","man_playing_water_polo":"🤽‍♂️","woman_playing_water_polo":"🤽‍♀️","handball_person":"🤾","man_playing_handball":"🤾‍♂️","woman_playing_handball":"🤾‍♀️","juggling_person":"🤹","man_juggling":"🤹‍♂️","woman_juggling":"🤹‍♀️","lotus_position":"🧘","lotus_position_man":"🧘‍♂️","lotus_position_woman":"🧘‍♀️","bath":"🛀","sleeping_bed":"🛌","people_holding_hands":"🧑‍🤝‍🧑","two_women_holding_hands":"👭","couple":"👫","two_men_holding_hands":"👬","couplekiss":"💏","couplekiss_man_woman":"👩‍❤️‍💋‍👨","couplekiss_man_man":"👨‍❤️‍💋‍👨","couplekiss_woman_woman":"👩‍❤️‍💋‍👩","couple_with_heart":"💑","couple_with_heart_woman_man":"👩‍❤️‍👨","couple_with_heart_man_man":"👨‍❤️‍👨","couple_with_heart_woman_woman":"👩‍❤️‍👩","family":"👪","family_man_woman_boy":"👨‍👩‍👦","family_man_woman_girl":"👨‍👩‍👧","family_man_woman_girl_boy":"👨‍👩‍👧‍👦","family_man_woman_boy_boy":"👨‍👩‍👦‍👦","family_man_woman_girl_girl":"👨‍👩‍👧‍👧","family_man_man_boy":"👨‍👨‍👦","family_man_man_girl":"👨‍👨‍👧","family_man_man_girl_boy":"👨‍👨‍👧‍👦","family_man_man_boy_boy":"👨‍👨‍👦‍👦","family_man_man_girl_girl":"👨‍👨‍👧‍👧","family_woman_woman_boy":"👩‍👩‍👦","family_woman_woman_girl":"👩‍👩‍👧","family_woman_woman_girl_boy":"👩‍👩‍👧‍👦","family_woman_woman_boy_boy":"👩‍👩‍👦‍👦","family_woman_woman_girl_girl":"👩‍👩‍👧‍👧","family_man_boy":"👨‍👦","family_man_boy_boy":"👨‍👦‍👦","family_man_girl":"👨‍👧","family_man_girl_boy":"👨‍👧‍👦","family_man_girl_girl":"👨‍👧‍👧","family_woman_boy":"👩‍👦","family_woman_boy_boy":"👩‍👦‍👦","family_woman_girl":"👩‍👧","family_woman_girl_boy":"👩‍👧‍👦","family_woman_girl_girl":"👩‍👧‍👧","speaking_head":"🗣️","bust_in_silhouette":"👤","busts_in_silhouette":"👥","people_hugging":"🫂","footprints":"👣","monkey_face":"🐵","monkey":"🐒","gorilla":"🦍","orangutan":"🦧","dog":"🐶","dog2":"🐕","guide_dog":"🦮","service_dog":"🐕‍🦺","poodle":"🐩","wolf":"🐺","fox_face":"🦊","raccoon":"🦝","cat":"🐱","cat2":"🐈","black_cat":"🐈‍⬛","lion":"🦁","tiger":"🐯","tiger2":"🐅","leopard":"🐆","horse":"🐴","racehorse":"🐎","unicorn":"🦄","zebra":"🦓","deer":"🦌","bison":"🦬","cow":"🐮","ox":"🐂","water_buffalo":"🐃","cow2":"🐄","pig":"🐷","pig2":"🐖","boar":"🐗","pig_nose":"🐽","ram":"🐏","sheep":"🐑","goat":"🐐","dromedary_camel":"🐪","camel":"🐫","llama":"🦙","giraffe":"🦒","elephant":"🐘","mammoth":"🦣","rhinoceros":"🦏","hippopotamus":"🦛","mouse":"🐭","mouse2":"🐁","rat":"🐀","hamster":"🐹","rabbit":"🐰","rabbit2":"🐇","chipmunk":"🐿️","beaver":"🦫","hedgehog":"🦔","bat":"🦇","bear":"🐻","polar_bear":"🐻‍❄️","koala":"🐨","panda_face":"🐼","sloth":"🦥","otter":"🦦","skunk":"🦨","kangaroo":"🦘","badger":"🦡","feet":"🐾","paw_prints":"🐾","turkey":"🦃","chicken":"🐔","rooster":"🐓","hatching_chick":"🐣","baby_chick":"🐤","hatched_chick":"🐥","bird":"🐦","penguin":"🐧","dove":"🕊️","eagle":"🦅","duck":"🦆","swan":"🦢","owl":"🦉","dodo":"🦤","feather":"🪶","flamingo":"🦩","peacock":"🦚","parrot":"🦜","frog":"🐸","crocodile":"🐊","turtle":"🐢","lizard":"🦎","snake":"🐍","dragon_face":"🐲","dragon":"🐉","sauropod":"🦕","t-rex":"🦖","whale":"🐳","whale2":"🐋","dolphin":"🐬","flipper":"🐬","seal":"🦭","fish":"🐟","tropical_fish":"🐠","blowfish":"🐡","shark":"🦈","octopus":"🐙","shell":"🐚","snail":"🐌","butterfly":"🦋","bug":"🐛","ant":"🐜","bee":"🐝","honeybee":"🐝","beetle":"🪲","lady_beetle":"🐞","cricket":"🦗","cockroach":"🪳","spider":"🕷️","spider_web":"🕸️","scorpion":"🦂","mosquito":"🦟","fly":"🪰","worm":"🪱","microbe":"🦠","bouquet":"💐","cherry_blossom":"🌸","white_flower":"💮","rosette":"🏵️","rose":"🌹","wilted_flower":"🥀","hibiscus":"🌺","sunflower":"🌻","blossom":"🌼","tulip":"🌷","seedling":"🌱","potted_plant":"🪴","evergreen_tree":"🌲","deciduous_tree":"🌳","palm_tree":"🌴","cactus":"🌵","ear_of_rice":"🌾","herb":"🌿","shamrock":"☘️","four_leaf_clover":"🍀","maple_leaf":"🍁","fallen_leaf":"🍂","leaves":"🍃","grapes":"🍇","melon":"🍈","watermelon":"🍉","tangerine":"🍊","orange":"🍊","mandarin":"🍊","lemon":"🍋","banana":"🍌","pineapple":"🍍","mango":"🥭","apple":"🍎","green_apple":"🍏","pear":"🍐","peach":"🍑","cherries":"🍒","strawberry":"🍓","blueberries":"🫐","kiwi_fruit":"🥝","tomato":"🍅","olive":"🫒","coconut":"🥥","avocado":"🥑","eggplant":"🍆","potato":"🥔","carrot":"🥕","corn":"🌽","hot_pepper":"🌶️","bell_pepper":"🫑","cucumber":"🥒","leafy_green":"🥬","broccoli":"🥦","garlic":"🧄","onion":"🧅","mushroom":"🍄","peanuts":"🥜","chestnut":"🌰","bread":"🍞","croissant":"🥐","baguette_bread":"🥖","flatbread":"🫓","pretzel":"🥨","bagel":"🥯","pancakes":"🥞","waffle":"🧇","cheese":"🧀","meat_on_bone":"🍖","poultry_leg":"🍗","cut_of_meat":"🥩","bacon":"🥓","hamburger":"🍔","fries":"🍟","pizza":"🍕","hotdog":"🌭","sandwich":"🥪","taco":"🌮","burrito":"🌯","tamale":"🫔","stuffed_flatbread":"🥙","falafel":"🧆","egg":"🥚","fried_egg":"🍳","shallow_pan_of_food":"🥘","stew":"🍲","fondue":"🫕","bowl_with_spoon":"🥣","green_salad":"🥗","popcorn":"🍿","butter":"🧈","salt":"🧂","canned_food":"🥫","bento":"🍱","rice_cracker":"🍘","rice_ball":"🍙","rice":"🍚","curry":"🍛","ramen":"🍜","spaghetti":"🍝","sweet_potato":"🍠","oden":"🍢","sushi":"🍣","fried_shrimp":"🍤","fish_cake":"🍥","moon_cake":"🥮","dango":"🍡","dumpling":"🥟","fortune_cookie":"🥠","takeout_box":"🥡","crab":"🦀","lobster":"🦞","shrimp":"🦐","squid":"🦑","oyster":"🦪","icecream":"🍦","shaved_ice":"🍧","ice_cream":"🍨","doughnut":"🍩","cookie":"🍪","birthday":"🎂","cake":"🍰","cupcake":"🧁","pie":"🥧","chocolate_bar":"🍫","candy":"🍬","lollipop":"🍭","custard":"🍮","honey_pot":"🍯","baby_bottle":"🍼","milk_glass":"🥛","coffee":"☕","teapot":"🫖","tea":"🍵","sake":"🍶","champagne":"🍾","wine_glass":"🍷","cocktail":"🍸","tropical_drink":"🍹","beer":"🍺","beers":"🍻","clinking_glasses":"🥂","tumbler_glass":"🥃","cup_with_straw":"🥤","bubble_tea":"🧋","beverage_box":"🧃","mate":"🧉","ice_cube":"🧊","chopsticks":"🥢","plate_with_cutlery":"🍽️","fork_and_knife":"🍴","spoon":"🥄","hocho":"🔪","knife":"🔪","amphora":"🏺","earth_africa":"🌍","earth_americas":"🌎","earth_asia":"🌏","globe_with_meridians":"🌐","world_map":"🗺️","japan":"🗾","compass":"🧭","mountain_snow":"🏔️","mountain":"⛰️","volcano":"🌋","mount_fuji":"🗻","camping":"🏕️","beach_umbrella":"🏖️","desert":"🏜️","desert_island":"🏝️","national_park":"🏞️","stadium":"🏟️","classical_building":"🏛️","building_construction":"🏗️","bricks":"🧱","rock":"🪨","wood":"🪵","hut":"🛖","houses":"🏘️","derelict_house":"🏚️","house":"🏠","house_with_garden":"🏡","office":"🏢","post_office":"🏣","european_post_office":"🏤","hospital":"🏥","bank":"🏦","hotel":"🏨","love_hotel":"🏩","convenience_store":"🏪","school":"🏫","department_store":"🏬","factory":"🏭","japanese_castle":"🏯","european_castle":"🏰","wedding":"💒","tokyo_tower":"🗼","statue_of_liberty":"🗽","church":"⛪","mosque":"🕌","hindu_temple":"🛕","synagogue":"🕍","shinto_shrine":"⛩️","kaaba":"🕋","fountain":"⛲","tent":"⛺","foggy":"🌁","night_with_stars":"🌃","cityscape":"🏙️","sunrise_over_mountains":"🌄","sunrise":"🌅","city_sunset":"🌆","city_sunrise":"🌇","bridge_at_night":"🌉","hotsprings":"♨️","carousel_horse":"🎠","ferris_wheel":"🎡","roller_coaster":"🎢","barber":"💈","circus_tent":"🎪","steam_locomotive":"🚂","railway_car":"🚃","bullettrain_side":"🚄","bullettrain_front":"🚅","train2":"🚆","metro":"🚇","light_rail":"🚈","station":"🚉","tram":"🚊","monorail":"🚝","mountain_railway":"🚞","train":"🚋","bus":"🚌","oncoming_bus":"🚍","trolleybus":"🚎","minibus":"🚐","ambulance":"🚑","fire_engine":"🚒","police_car":"🚓","oncoming_police_car":"🚔","taxi":"🚕","oncoming_taxi":"🚖","car":"🚗","red_car":"🚗","oncoming_automobile":"🚘","blue_car":"🚙","pickup_truck":"🛻","truck":"🚚","articulated_lorry":"🚛","tractor":"🚜","racing_car":"🏎️","motorcycle":"🏍️","motor_scooter":"🛵","manual_wheelchair":"🦽","motorized_wheelchair":"🦼","auto_rickshaw":"🛺","bike":"🚲","kick_scooter":"🛴","skateboard":"🛹","roller_skate":"🛼","busstop":"🚏","motorway":"🛣️","railway_track":"🛤️","oil_drum":"🛢️","fuelpump":"⛽","rotating_light":"🚨","traffic_light":"🚥","vertical_traffic_light":"🚦","stop_sign":"🛑","construction":"🚧","anchor":"⚓","boat":"⛵","sailboat":"⛵","canoe":"🛶","speedboat":"🚤","passenger_ship":"🛳️","ferry":"⛴️","motor_boat":"🛥️","ship":"🚢","airplane":"✈️","small_airplane":"🛩️","flight_departure":"🛫","flight_arrival":"🛬","parachute":"🪂","seat":"💺","helicopter":"🚁","suspension_railway":"🚟","mountain_cableway":"🚠","aerial_tramway":"🚡","artificial_satellite":"🛰️","rocket":"🚀","flying_saucer":"🛸","bellhop_bell":"🛎️","luggage":"🧳","hourglass":"⌛","hourglass_flowing_sand":"⏳","watch":"⌚","alarm_clock":"⏰","stopwatch":"⏱️","timer_clock":"⏲️","mantelpiece_clock":"🕰️","clock12":"🕛","clock1230":"🕧","clock1":"🕐","clock130":"🕜","clock2":"🕑","clock230":"🕝","clock3":"🕒","clock330":"🕞","clock4":"🕓","clock430":"🕟","clock5":"🕔","clock530":"🕠","clock6":"🕕","clock630":"🕡","clock7":"🕖","clock730":"🕢","clock8":"🕗","clock830":"🕣","clock9":"🕘","clock930":"🕤","clock10":"🕙","clock1030":"🕥","clock11":"🕚","clock1130":"🕦","new_moon":"🌑","waxing_crescent_moon":"🌒","first_quarter_moon":"🌓","moon":"🌔","waxing_gibbous_moon":"🌔","full_moon":"🌕","waning_gibbous_moon":"🌖","last_quarter_moon":"🌗","waning_crescent_moon":"🌘","crescent_moon":"🌙","new_moon_with_face":"🌚","first_quarter_moon_with_face":"🌛","last_quarter_moon_with_face":"🌜","thermometer":"🌡️","sunny":"☀️","full_moon_with_face":"🌝","sun_with_face":"🌞","ringed_planet":"🪐","star":"⭐","star2":"🌟","stars":"🌠","milky_way":"🌌","cloud":"☁️","partly_sunny":"⛅","cloud_with_lightning_and_rain":"⛈️","sun_behind_small_cloud":"🌤️","sun_behind_large_cloud":"🌥️","sun_behind_rain_cloud":"🌦️","cloud_with_rain":"🌧️","cloud_with_snow":"🌨️","cloud_with_lightning":"🌩️","tornado":"🌪️","fog":"🌫️","wind_face":"🌬️","cyclone":"🌀","rainbow":"🌈","closed_umbrella":"🌂","open_umbrella":"☂️","umbrella":"☔","parasol_on_ground":"⛱️","zap":"⚡","snowflake":"❄️","snowman_with_snow":"☃️","snowman":"⛄","comet":"☄️","fire":"🔥","droplet":"💧","ocean":"🌊","jack_o_lantern":"🎃","christmas_tree":"🎄","fireworks":"🎆","sparkler":"🎇","firecracker":"🧨","sparkles":"✨","balloon":"🎈","tada":"🎉","confetti_ball":"🎊","tanabata_tree":"🎋","bamboo":"🎍","dolls":"🎎","flags":"🎏","wind_chime":"🎐","rice_scene":"🎑","red_envelope":"🧧","ribbon":"🎀","gift":"🎁","reminder_ribbon":"🎗️","tickets":"🎟️","ticket":"🎫","medal_military":"🎖️","trophy":"🏆","medal_sports":"🏅","1st_place_medal":"🥇","2nd_place_medal":"🥈","3rd_place_medal":"🥉","soccer":"⚽","baseball":"⚾","softball":"🥎","basketball":"🏀","volleyball":"🏐","football":"🏈","rugby_football":"🏉","tennis":"🎾","flying_disc":"🥏","bowling":"🎳","cricket_game":"🏏","field_hockey":"🏑","ice_hockey":"🏒","lacrosse":"🥍","ping_pong":"🏓","badminton":"🏸","boxing_glove":"🥊","martial_arts_uniform":"🥋","goal_net":"🥅","golf":"⛳","ice_skate":"⛸️","fishing_pole_and_fish":"🎣","diving_mask":"🤿","running_shirt_with_sash":"🎽","ski":"🎿","sled":"🛷","curling_stone":"🥌","dart":"🎯","yo_yo":"🪀","kite":"🪁","8ball":"🎱","crystal_ball":"🔮","magic_wand":"🪄","nazar_amulet":"🧿","video_game":"🎮","joystick":"🕹️","slot_machine":"🎰","game_die":"🎲","jigsaw":"🧩","teddy_bear":"🧸","pinata":"🪅","nesting_dolls":"🪆","spades":"♠️","hearts":"♥️","diamonds":"♦️","clubs":"♣️","chess_pawn":"♟️","black_joker":"🃏","mahjong":"🀄","flower_playing_cards":"🎴","performing_arts":"🎭","framed_picture":"🖼️","art":"🎨","thread":"🧵","sewing_needle":"🪡","yarn":"🧶","knot":"🪢","eyeglasses":"👓","dark_sunglasses":"🕶️","goggles":"🥽","lab_coat":"🥼","safety_vest":"🦺","necktie":"👔","shirt":"👕","tshirt":"👕","jeans":"👖","scarf":"🧣","gloves":"🧤","coat":"🧥","socks":"🧦","dress":"👗","kimono":"👘","sari":"🥻","one_piece_swimsuit":"🩱","swim_brief":"🩲","shorts":"🩳","bikini":"👙","womans_clothes":"👚","purse":"👛","handbag":"👜","pouch":"👝","shopping":"🛍️","school_satchel":"🎒","thong_sandal":"🩴","mans_shoe":"👞","shoe":"👞","athletic_shoe":"👟","hiking_boot":"🥾","flat_shoe":"🥿","high_heel":"👠","sandal":"👡","ballet_shoes":"🩰","boot":"👢","crown":"👑","womans_hat":"👒","tophat":"🎩","mortar_board":"🎓","billed_cap":"🧢","military_helmet":"🪖","rescue_worker_helmet":"⛑️","prayer_beads":"📿","lipstick":"💄","ring":"💍","gem":"💎","mute":"🔇","speaker":"🔈","sound":"🔉","loud_sound":"🔊","loudspeaker":"📢","mega":"📣","postal_horn":"📯","bell":"🔔","no_bell":"🔕","musical_score":"🎼","musical_note":"🎵","notes":"🎶","studio_microphone":"🎙️","level_slider":"🎚️","control_knobs":"🎛️","microphone":"🎤","headphones":"🎧","radio":"📻","saxophone":"🎷","accordion":"🪗","guitar":"🎸","musical_keyboard":"🎹","trumpet":"🎺","violin":"🎻","banjo":"🪕","drum":"🥁","long_drum":"🪘","iphone":"📱","calling":"📲","phone":"☎️","telephone":"☎️","telephone_receiver":"📞","pager":"📟","fax":"📠","battery":"🔋","electric_plug":"🔌","computer":"💻","desktop_computer":"🖥️","printer":"🖨️","keyboard":"⌨️","computer_mouse":"🖱️","trackball":"🖲️","minidisc":"💽","floppy_disk":"💾","cd":"💿","dvd":"📀","abacus":"🧮","movie_camera":"🎥","film_strip":"🎞️","film_projector":"📽️","clapper":"🎬","tv":"📺","camera":"📷","camera_flash":"📸","video_camera":"📹","vhs":"📼","mag":"🔍","mag_right":"🔎","candle":"🕯️","bulb":"💡","flashlight":"🔦","izakaya_lantern":"🏮","lantern":"🏮","diya_lamp":"🪔","notebook_with_decorative_cover":"📔","closed_book":"📕","book":"📖","open_book":"📖","green_book":"📗","blue_book":"📘","orange_book":"📙","books":"📚","notebook":"📓","ledger":"📒","page_with_curl":"📃","scroll":"📜","page_facing_up":"📄","newspaper":"📰","newspaper_roll":"🗞️","bookmark_tabs":"📑","bookmark":"🔖","label":"🏷️","moneybag":"💰","coin":"🪙","yen":"💴","dollar":"💵","euro":"💶","pound":"💷","money_with_wings":"💸","credit_card":"💳","receipt":"🧾","chart":"💹","envelope":"✉️","email":"📧","e-mail":"📧","incoming_envelope":"📨","envelope_with_arrow":"📩","outbox_tray":"📤","inbox_tray":"📥","package":"📦","mailbox":"📫","mailbox_closed":"📪","mailbox_with_mail":"📬","mailbox_with_no_mail":"📭","postbox":"📮","ballot_box":"🗳️","pencil2":"✏️","black_nib":"✒️","fountain_pen":"🖋️","pen":"🖊️","paintbrush":"🖌️","crayon":"🖍️","memo":"📝","pencil":"📝","briefcase":"💼","file_folder":"📁","open_file_folder":"📂","card_index_dividers":"🗂️","date":"📅","calendar":"📆","spiral_notepad":"🗒️","spiral_calendar":"🗓️","card_index":"📇","chart_with_upwards_trend":"📈","chart_with_downwards_trend":"📉","bar_chart":"📊","clipboard":"📋","pushpin":"📌","round_pushpin":"📍","paperclip":"📎","paperclips":"🖇️","straight_ruler":"📏","triangular_ruler":"📐","scissors":"✂️","card_file_box":"🗃️","file_cabinet":"🗄️","wastebasket":"🗑️","lock":"🔒","unlock":"🔓","lock_with_ink_pen":"🔏","closed_lock_with_key":"🔐","key":"🔑","old_key":"🗝️","hammer":"🔨","axe":"🪓","pick":"⛏️","hammer_and_pick":"⚒️","hammer_and_wrench":"🛠️","dagger":"🗡️","crossed_swords":"⚔️","gun":"🔫","boomerang":"🪃","bow_and_arrow":"🏹","shield":"🛡️","carpentry_saw":"🪚","wrench":"🔧","screwdriver":"🪛","nut_and_bolt":"🔩","gear":"⚙️","clamp":"🗜️","balance_scale":"⚖️","probing_cane":"🦯","link":"🔗","chains":"⛓️","hook":"🪝","toolbox":"🧰","magnet":"🧲","ladder":"🪜","alembic":"⚗️","test_tube":"🧪","petri_dish":"🧫","dna":"🧬","microscope":"🔬","telescope":"🔭","satellite":"📡","syringe":"💉","drop_of_blood":"🩸","pill":"💊","adhesive_bandage":"🩹","stethoscope":"🩺","door":"🚪","elevator":"🛗","mirror":"🪞","window":"🪟","bed":"🛏️","couch_and_lamp":"🛋️","chair":"🪑","toilet":"🚽","plunger":"🪠","shower":"🚿","bathtub":"🛁","mouse_trap":"🪤","razor":"🪒","lotion_bottle":"🧴","safety_pin":"🧷","broom":"🧹","basket":"🧺","roll_of_paper":"🧻","bucket":"🪣","soap":"🧼","toothbrush":"🪥","sponge":"🧽","fire_extinguisher":"🧯","shopping_cart":"🛒","smoking":"🚬","coffin":"⚰️","headstone":"🪦","funeral_urn":"⚱️","moyai":"🗿","placard":"🪧","atm":"🏧","put_litter_in_its_place":"🚮","potable_water":"🚰","wheelchair":"♿","mens":"🚹","womens":"🚺","restroom":"🚻","baby_symbol":"🚼","wc":"🚾","passport_control":"🛂","customs":"🛃","baggage_claim":"🛄","left_luggage":"🛅","warning":"⚠️","children_crossing":"🚸","no_entry":"⛔","no_entry_sign":"🚫","no_bicycles":"🚳","no_smoking":"🚭","do_not_litter":"🚯","non-potable_water":"🚱","no_pedestrians":"🚷","no_mobile_phones":"📵","underage":"🔞","radioactive":"☢️","biohazard":"☣️","arrow_up":"⬆️","arrow_upper_right":"↗️","arrow_right":"➡️","arrow_lower_right":"↘️","arrow_down":"⬇️","arrow_lower_left":"↙️","arrow_left":"⬅️","arrow_upper_left":"↖️","arrow_up_down":"↕️","left_right_arrow":"↔️","leftwards_arrow_with_hook":"↩️","arrow_right_hook":"↪️","arrow_heading_up":"⤴️","arrow_heading_down":"⤵️","arrows_clockwise":"🔃","arrows_counterclockwise":"🔄","back":"🔙","end":"🔚","on":"🔛","soon":"🔜","top":"🔝","place_of_worship":"🛐","atom_symbol":"⚛️","om":"🕉️","star_of_david":"✡️","wheel_of_dharma":"☸️","yin_yang":"☯️","latin_cross":"✝️","orthodox_cross":"☦️","star_and_crescent":"☪️","peace_symbol":"☮️","menorah":"🕎","six_pointed_star":"🔯","aries":"♈","taurus":"♉","gemini":"♊","cancer":"♋","leo":"♌","virgo":"♍","libra":"♎","scorpius":"♏","sagittarius":"♐","capricorn":"♑","aquarius":"♒","pisces":"♓","ophiuchus":"⛎","twisted_rightwards_arrows":"🔀","repeat":"🔁","repeat_one":"🔂","arrow_forward":"▶️","fast_forward":"⏩","next_track_button":"⏭️","play_or_pause_button":"⏯️","arrow_backward":"◀️","rewind":"⏪","previous_track_button":"⏮️","arrow_up_small":"🔼","arrow_double_up":"⏫","arrow_down_small":"🔽","arrow_double_down":"⏬","pause_button":"⏸️","stop_button":"⏹️","record_button":"⏺️","eject_button":"⏏️","cinema":"🎦","low_brightness":"🔅","high_brightness":"🔆","signal_strength":"📶","vibration_mode":"📳","mobile_phone_off":"📴","female_sign":"♀️","male_sign":"♂️","transgender_symbol":"⚧️","heavy_multiplication_x":"✖️","heavy_plus_sign":"➕","heavy_minus_sign":"➖","heavy_division_sign":"➗","infinity":"♾️","bangbang":"‼️","interrobang":"⁉️","question":"❓","grey_question":"❔","grey_exclamation":"❕","exclamation":"❗","heavy_exclamation_mark":"❗","wavy_dash":"〰️","currency_exchange":"💱","heavy_dollar_sign":"💲","medical_symbol":"⚕️","recycle":"♻️","fleur_de_lis":"⚜️","trident":"🔱","name_badge":"📛","beginner":"🔰","o":"⭕","white_check_mark":"✅","ballot_box_with_check":"☑️","heavy_check_mark":"✔️","x":"❌","negative_squared_cross_mark":"❎","curly_loop":"➰","loop":"➿","part_alternation_mark":"〽️","eight_spoked_asterisk":"✳️","eight_pointed_black_star":"✴️","sparkle":"❇️","copyright":"©️","registered":"®️","tm":"™️","hash":"#️⃣","asterisk":"*️⃣","zero":"0️⃣","one":"1️⃣","two":"2️⃣","three":"3️⃣","four":"4️⃣","five":"5️⃣","six":"6️⃣","seven":"7️⃣","eight":"8️⃣","nine":"9️⃣","keycap_ten":"🔟","capital_abcd":"🔠","abcd":"🔡","symbols":"🔣","abc":"🔤","a":"🅰️","ab":"🆎","b":"🅱️","cl":"🆑","cool":"🆒","free":"🆓","information_source":"ℹ️","id":"🆔","m":"Ⓜ️","new":"🆕","ng":"🆖","o2":"🅾️","ok":"🆗","parking":"🅿️","sos":"🆘","up":"🆙","vs":"🆚","koko":"🈁","sa":"🈂️","ideograph_advantage":"🉐","accept":"🉑","congratulations":"㊗️","secret":"㊙️","u6e80":"🈵","red_circle":"🔴","orange_circle":"🟠","yellow_circle":"🟡","green_circle":"🟢","large_blue_circle":"🔵","purple_circle":"🟣","brown_circle":"🟤","black_circle":"⚫","white_circle":"⚪","red_square":"🟥","orange_square":"🟧","yellow_square":"🟨","green_square":"🟩","blue_square":"🟦","purple_square":"🟪","brown_square":"🟫","black_large_square":"⬛","white_large_square":"⬜","black_medium_square":"◼️","white_medium_square":"◻️","black_medium_small_square":"◾","white_medium_small_square":"◽","black_small_square":"▪️","white_small_square":"▫️","large_orange_diamond":"🔶","large_blue_diamond":"🔷","small_orange_diamond":"🔸","small_blue_diamond":"🔹","small_red_triangle":"🔺","small_red_triangle_down":"🔻","diamond_shape_with_a_dot_inside":"💠","radio_button":"🔘","white_square_button":"🔳","black_square_button":"🔲","checkered_flag":"🏁","triangular_flag_on_post":"🚩","crossed_flags":"🎌","black_flag":"🏴","white_flag":"🏳️","rainbow_flag":"🏳️‍🌈","transgender_flag":"🏳️‍⚧️","pirate_flag":"🏴‍☠️","ascension_island":"🇦🇨","andorra":"🇦🇩","united_arab_emirates":"🇦🇪","afghanistan":"🇦🇫","antigua_barbuda":"🇦🇬","anguilla":"🇦🇮","albania":"🇦🇱","armenia":"🇦🇲","angola":"🇦🇴","antarctica":"🇦🇶","argentina":"🇦🇷","american_samoa":"🇦🇸","austria":"🇦🇹","australia":"🇦🇺","aruba":"🇦🇼","aland_islands":"🇦🇽","azerbaijan":"🇦🇿","bosnia_herzegovina":"🇧🇦","barbados":"🇧🇧","bangladesh":"🇧🇩","belgium":"🇧🇪","burkina_faso":"🇧🇫","bulgaria":"🇧🇬","bahrain":"🇧🇭","burundi":"🇧🇮","benin":"🇧🇯","st_barthelemy":"🇧🇱","bermuda":"🇧🇲","brunei":"🇧🇳","bolivia":"🇧🇴","caribbean_netherlands":"🇧🇶","brazil":"🇧🇷","bahamas":"🇧🇸","bhutan":"🇧🇹","bouvet_island":"🇧🇻","botswana":"🇧🇼","belarus":"🇧🇾","belize":"🇧🇿","canada":"🇨🇦","cocos_islands":"🇨🇨","congo_kinshasa":"🇨🇩","central_african_republic":"🇨🇫","congo_brazzaville":"🇨🇬","switzerland":"🇨🇭","cote_divoire":"🇨🇮","cook_islands":"🇨🇰","chile":"🇨🇱","cameroon":"🇨🇲","cn":"🇨🇳","colombia":"🇨🇴","clipperton_island":"🇨🇵","costa_rica":"🇨🇷","cuba":"🇨🇺","cape_verde":"🇨🇻","curacao":"🇨🇼","christmas_island":"🇨🇽","cyprus":"🇨🇾","czech_republic":"🇨🇿","de":"🇩🇪","diego_garcia":"🇩🇬","djibouti":"🇩🇯","denmark":"🇩🇰","dominica":"🇩🇲","dominican_republic":"🇩🇴","algeria":"🇩🇿","ceuta_melilla":"🇪🇦","ecuador":"🇪🇨","estonia":"🇪🇪","egypt":"🇪🇬","western_sahara":"🇪🇭","eritrea":"🇪🇷","es":"🇪🇸","ethiopia":"🇪🇹","eu":"🇪🇺","european_union":"🇪🇺","finland":"🇫🇮","fiji":"🇫🇯","falkland_islands":"🇫🇰","micronesia":"🇫🇲","faroe_islands":"🇫🇴","fr":"🇫🇷","gabon":"🇬🇦","gb":"🇬🇧","uk":"🇬🇧","grenada":"🇬🇩","georgia":"🇬🇪","french_guiana":"🇬🇫","guernsey":"🇬🇬","ghana":"🇬🇭","gibraltar":"🇬🇮","greenland":"🇬🇱","gambia":"🇬🇲","guinea":"🇬🇳","guadeloupe":"🇬🇵","equatorial_guinea":"🇬🇶","greece":"🇬🇷","south_georgia_south_sandwich_islands":"🇬🇸","guatemala":"🇬🇹","guam":"🇬🇺","guinea_bissau":"🇬🇼","guyana":"🇬🇾","hong_kong":"🇭🇰","heard_mcdonald_islands":"🇭🇲","honduras":"🇭🇳","croatia":"🇭🇷","haiti":"🇭🇹","hungary":"🇭🇺","canary_islands":"🇮🇨","indonesia":"🇮🇩","ireland":"🇮🇪","israel":"🇮🇱","isle_of_man":"🇮🇲","india":"🇮🇳","british_indian_ocean_territory":"🇮🇴","iraq":"🇮🇶","iran":"🇮🇷","iceland":"🇮🇸","it":"🇮🇹","jersey":"🇯🇪","jamaica":"🇯🇲","jordan":"🇯🇴","jp":"🇯🇵","kenya":"🇰🇪","kyrgyzstan":"🇰🇬","cambodia":"🇰🇭","kiribati":"🇰🇮","comoros":"🇰🇲","st_kitts_nevis":"🇰🇳","north_korea":"🇰🇵","kr":"🇰🇷","kuwait":"🇰🇼","cayman_islands":"🇰🇾","kazakhstan":"🇰🇿","laos":"🇱🇦","lebanon":"🇱🇧","st_lucia":"🇱🇨","liechtenstein":"🇱🇮","sri_lanka":"🇱🇰","liberia":"🇱🇷","lesotho":"🇱🇸","lithuania":"🇱🇹","luxembourg":"🇱🇺","latvia":"🇱🇻","libya":"🇱🇾","morocco":"🇲🇦","monaco":"🇲🇨","moldova":"🇲🇩","montenegro":"🇲🇪","st_martin":"🇲🇫","madagascar":"🇲🇬","marshall_islands":"🇲🇭","macedonia":"🇲🇰","mali":"🇲🇱","myanmar":"🇲🇲","mongolia":"🇲🇳","macau":"🇲🇴","northern_mariana_islands":"🇲🇵","martinique":"🇲🇶","mauritania":"🇲🇷","montserrat":"🇲🇸","malta":"🇲🇹","mauritius":"🇲🇺","maldives":"🇲🇻","malawi":"🇲🇼","mexico":"🇲🇽","malaysia":"🇲🇾","mozambique":"🇲🇿","namibia":"🇳🇦","new_caledonia":"🇳🇨","niger":"🇳🇪","norfolk_island":"🇳🇫","nigeria":"🇳🇬","nicaragua":"🇳🇮","netherlands":"🇳🇱","norway":"🇳🇴","nepal":"🇳🇵","nauru":"🇳🇷","niue":"🇳🇺","new_zealand":"🇳🇿","oman":"🇴🇲","panama":"🇵🇦","peru":"🇵🇪","french_polynesia":"🇵🇫","papua_new_guinea":"🇵🇬","philippines":"🇵🇭","pakistan":"🇵🇰","poland":"🇵🇱","st_pierre_miquelon":"🇵🇲","pitcairn_islands":"🇵🇳","puerto_rico":"🇵🇷","palestinian_territories":"🇵🇸","portugal":"🇵🇹","palau":"🇵🇼","paraguay":"🇵🇾","qatar":"🇶🇦","reunion":"🇷🇪","romania":"🇷🇴","serbia":"🇷🇸","ru":"🇷🇺","rwanda":"🇷🇼","saudi_arabia":"🇸🇦","solomon_islands":"🇸🇧","seychelles":"🇸🇨","sudan":"🇸🇩","sweden":"🇸🇪","singapore":"🇸🇬","st_helena":"🇸🇭","slovenia":"🇸🇮","svalbard_jan_mayen":"🇸🇯","slovakia":"🇸🇰","sierra_leone":"🇸🇱","san_marino":"🇸🇲","senegal":"🇸🇳","somalia":"🇸🇴","suriname":"🇸🇷","south_sudan":"🇸🇸","sao_tome_principe":"🇸🇹","el_salvador":"🇸🇻","sint_maarten":"🇸🇽","syria":"🇸🇾","swaziland":"🇸🇿","tristan_da_cunha":"🇹🇦","turks_caicos_islands":"🇹🇨","chad":"🇹🇩","french_southern_territories":"🇹🇫","togo":"🇹🇬","thailand":"🇹🇭","tajikistan":"🇹🇯","tokelau":"🇹🇰","timor_leste":"🇹🇱","turkmenistan":"🇹🇲","tunisia":"🇹🇳","tonga":"🇹🇴","tr":"🇹🇷","trinidad_tobago":"🇹🇹","tuvalu":"🇹🇻","taiwan":"🇹🇼","tanzania":"🇹🇿","ukraine":"🇺🇦","uganda":"🇺🇬","us_outlying_islands":"🇺🇲","united_nations":"🇺🇳","us":"🇺🇸","uruguay":"🇺🇾","uzbekistan":"🇺🇿","vatican_city":"🇻🇦","st_vincent_grenadines":"🇻🇨","venezuela":"🇻🇪","british_virgin_islands":"🇻🇬","us_virgin_islands":"🇻🇮","vietnam":"🇻🇳","vanuatu":"🇻🇺","wallis_futuna":"🇼🇫","samoa":"🇼🇸","kosovo":"🇽🇰","yemen":"🇾🇪","mayotte":"🇾🇹","south_africa":"🇿🇦","zambia":"🇿🇲","zimbabwe":"🇿🇼","england":"🏴󠁧󠁢󠁥󠁮󠁧󠁿","scotland":"🏴󠁧󠁢󠁳󠁣󠁴󠁿","wales":"🏴󠁧󠁢󠁷󠁬󠁳󠁿"}')},527:(e,t,n)=>{"use strict";n.r(t)},239:(e,t,n)=>{var i=n(49);e.exports=function(e){var t,n="",o=e||{};return function(e,o,r,a,s,l,c,u){n=n+'<div class="msg-row collapse"'+i.attr("id",r,!0,!0)+">",o=new e,n=n+'<div class="col-md-auto"><div'+(i.attr("class",i.classes(["badge","rounded-pill",l],[!1,!1,!0]),!1,!0)+i.attr("style",i.style(`background-color: #${u};`),!0,!0))+">"+i.escape(null==(t=c)?"":t)+"</div></div><div"+i.attr("class",i.classes(["col",s],[!1,!0]),!1,!0)+">"+(null==(t=a)?"":t)+'</div><time class="col-md-auto align-self-end text-muted"'+i.attr("datetime",o.toISOString(),!0,!0)+">"+i.escape(null==(t=o.toLocaleTimeString())?"":t)+"</time></div>"}.call(this,"Date"in o?o.Date:"undefined"!=typeof Date?Date:void 0,"dt"in o?o.dt:"undefined"!=typeof dt?dt:void 0,"id"in o?o.id:"undefined"!=typeof id?id:void 0,"msg"in o?o.msg:"undefined"!=typeof msg?msg:void 0,"msgClass"in o?o.msgClass:"undefined"!=typeof msgClass?msgClass:void 0,"msgTextColorClass"in o?o.msgTextColorClass:"undefined"!=typeof msgTextColorClass?msgTextColorClass:void 0,"ressourceName"in o?o.ressourceName:"undefined"!=typeof ressourceName?ressourceName:void 0,"rgbHex"in o?o.rgbHex:"undefined"!=typeof rgbHex?rgbHex:void 0),n}},795:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Alert:()=>vt,Button:()=>kt,Carousel:()=>Bt,Collapse:()=>Jt,Dropdown:()=>kn,Modal:()=>qn,Popover:()=>fi,ScrollSpy:()=>wi,Tab:()=>Li,Toast:()=>Ii,Tooltip:()=>ai});var i={};n.r(i),n.d(i,{afterMain:()=>E,afterRead:()=>y,afterWrite:()=>A,applyStyles:()=>N,arrow:()=>J,auto:()=>l,basePlacements:()=>c,beforeMain:()=>w,beforeRead:()=>b,beforeWrite:()=>T,bottom:()=>r,clippingParents:()=>_,computeStyles:()=>ee,createPopper:()=>Ce,createPopperBase:()=>De,createPopperLite:()=>Se,detectOverflow:()=>me,end:()=>d,eventListeners:()=>ne,flip:()=>ge,hide:()=>ye,left:()=>s,main:()=>k,modifierPhases:()=>O,offset:()=>we,placements:()=>g,popper:()=>h,popperGenerator:()=>Le,popperOffsets:()=>ke,preventOverflow:()=>Ee,read:()=>v,reference:()=>p,right:()=>a,start:()=>u,top:()=>o,variationPlacements:()=>m,viewport:()=>f,write:()=>x});var o="top",r="bottom",a="right",s="left",l="auto",c=[o,r,a,s],u="start",d="end",_="clippingParents",f="viewport",h="popper",p="reference",m=c.reduce((function(e,t){return e.concat([t+"-"+u,t+"-"+d])}),[]),g=[].concat(c,[l]).reduce((function(e,t){return e.concat([t,t+"-"+u,t+"-"+d])}),[]),b="beforeRead",v="read",y="afterRead",w="beforeMain",k="main",E="afterMain",T="beforeWrite",x="write",A="afterWrite",O=[b,v,y,w,k,E,T,x,A];function L(e){return e?(e.nodeName||"").toLowerCase():null}function D(e){if(null==e)return window;if("[object Window]"!==e.toString()){var t=e.ownerDocument;return t&&t.defaultView||window}return e}function C(e){return e instanceof D(e).Element||e instanceof Element}function S(e){return e instanceof D(e).HTMLElement||e instanceof HTMLElement}function j(e){return"undefined"!=typeof ShadowRoot&&(e instanceof D(e).ShadowRoot||e instanceof ShadowRoot)}const N={name:"applyStyles",enabled:!0,phase:"write",fn:function(e){var t=e.state;Object.keys(t.elements).forEach((function(e){var n=t.styles[e]||{},i=t.attributes[e]||{},o=t.elements[e];S(o)&&L(o)&&(Object.assign(o.style,n),Object.keys(i).forEach((function(e){var t=i[e];!1===t?o.removeAttribute(e):o.setAttribute(e,!0===t?"":t)})))}))},effect:function(e){var t=e.state,n={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,n.popper),t.styles=n,t.elements.arrow&&Object.assign(t.elements.arrow.style,n.arrow),function(){Object.keys(t.elements).forEach((function(e){var i=t.elements[e],o=t.attributes[e]||{},r=Object.keys(t.styles.hasOwnProperty(e)?t.styles[e]:n[e]).reduce((function(e,t){return e[t]="",e}),{});S(i)&&L(i)&&(Object.assign(i.style,r),Object.keys(o).forEach((function(e){i.removeAttribute(e)})))}))}},requires:["computeStyles"]};function P(e){return e.split("-")[0]}function M(e){var t=e.getBoundingClientRect();return{width:t.width,height:t.height,top:t.top,right:t.right,bottom:t.bottom,left:t.left,x:t.left,y:t.top}}function R(e){var t=M(e),n=e.offsetWidth,i=e.offsetHeight;return Math.abs(t.width-n)<=.5&&(n=t.width),Math.abs(t.height-i)<=.5&&(i=t.height),{x:e.offsetLeft,y:e.offsetTop,width:n,height:i}}function I(e,t){var n=t.getRootNode&&t.getRootNode();if(e.contains(t))return!0;if(n&&j(n)){var i=t;do{if(i&&e.isSameNode(i))return!0;i=i.parentNode||i.host}while(i)}return!1}function H(e){return D(e).getComputedStyle(e)}function z(e){return["table","td","th"].indexOf(L(e))>=0}function B(e){return((C(e)?e.ownerDocument:e.document)||window.document).documentElement}function q(e){return"html"===L(e)?e:e.assignedSlot||e.parentNode||(j(e)?e.host:null)||B(e)}function W(e){return S(e)&&"fixed"!==H(e).position?e.offsetParent:null}function K(e){for(var t=D(e),n=W(e);n&&z(n)&&"static"===H(n).position;)n=W(n);return n&&("html"===L(n)||"body"===L(n)&&"static"===H(n).position)?t:n||function(e){for(var t=navigator.userAgent.toLowerCase().includes("firefox"),n=q(e);S(n)&&["html","body"].indexOf(L(n))<0;){var i=H(n);if("none"!==i.transform||"none"!==i.perspective||"paint"===i.contain||["transform","perspective"].includes(i.willChange)||t&&"filter"===i.willChange||t&&i.filter&&"none"!==i.filter)return n;n=n.parentNode}return null}(e)||t}function U(e){return["top","bottom"].indexOf(e)>=0?"x":"y"}var F=Math.max,Y=Math.min,V=Math.round;function X(e,t,n){return F(e,Y(t,n))}function Q(e){return Object.assign({},{top:0,right:0,bottom:0,left:0},e)}function $(e,t){return t.reduce((function(t,n){return t[n]=e,t}),{})}const J={name:"arrow",enabled:!0,phase:"main",fn:function(e){var t,n=e.state,i=e.name,l=e.options,u=n.elements.arrow,d=n.modifiersData.popperOffsets,_=P(n.placement),f=U(_),h=[s,a].indexOf(_)>=0?"height":"width";if(u&&d){var p=function(e,t){return Q("number"!=typeof(e="function"==typeof e?e(Object.assign({},t.rects,{placement:t.placement})):e)?e:$(e,c))}(l.padding,n),m=R(u),g="y"===f?o:s,b="y"===f?r:a,v=n.rects.reference[h]+n.rects.reference[f]-d[f]-n.rects.popper[h],y=d[f]-n.rects.reference[f],w=K(u),k=w?"y"===f?w.clientHeight||0:w.clientWidth||0:0,E=v/2-y/2,T=p[g],x=k-m[h]-p[b],A=k/2-m[h]/2+E,O=X(T,A,x),L=f;n.modifiersData[i]=((t={})[L]=O,t.centerOffset=O-A,t)}},effect:function(e){var t=e.state,n=e.options.element,i=void 0===n?"[data-popper-arrow]":n;null!=i&&("string"!=typeof i||(i=t.elements.popper.querySelector(i)))&&I(t.elements.popper,i)&&(t.elements.arrow=i)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};var G={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Z(e){var t,n=e.popper,i=e.popperRect,l=e.placement,c=e.offsets,u=e.position,d=e.gpuAcceleration,_=e.adaptive,f=e.roundOffsets,h=!0===f?function(e){var t=e.x,n=e.y,i=window.devicePixelRatio||1;return{x:V(V(t*i)/i)||0,y:V(V(n*i)/i)||0}}(c):"function"==typeof f?f(c):c,p=h.x,m=void 0===p?0:p,g=h.y,b=void 0===g?0:g,v=c.hasOwnProperty("x"),y=c.hasOwnProperty("y"),w=s,k=o,E=window;if(_){var T=K(n),x="clientHeight",A="clientWidth";T===D(n)&&"static"!==H(T=B(n)).position&&(x="scrollHeight",A="scrollWidth"),l===o&&(k=r,b-=T[x]-i.height,b*=d?1:-1),l===s&&(w=a,m-=T[A]-i.width,m*=d?1:-1)}var O,L=Object.assign({position:u},_&&G);return d?Object.assign({},L,((O={})[k]=y?"0":"",O[w]=v?"0":"",O.transform=(E.devicePixelRatio||1)<2?"translate("+m+"px, "+b+"px)":"translate3d("+m+"px, "+b+"px, 0)",O)):Object.assign({},L,((t={})[k]=y?b+"px":"",t[w]=v?m+"px":"",t.transform="",t))}const ee={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(e){var t=e.state,n=e.options,i=n.gpuAcceleration,o=void 0===i||i,r=n.adaptive,a=void 0===r||r,s=n.roundOffsets,l=void 0===s||s,c={placement:P(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:o};null!=t.modifiersData.popperOffsets&&(t.styles.popper=Object.assign({},t.styles.popper,Z(Object.assign({},c,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:a,roundOffsets:l})))),null!=t.modifiersData.arrow&&(t.styles.arrow=Object.assign({},t.styles.arrow,Z(Object.assign({},c,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})},data:{}};var te={passive:!0};const ne={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(e){var t=e.state,n=e.instance,i=e.options,o=i.scroll,r=void 0===o||o,a=i.resize,s=void 0===a||a,l=D(t.elements.popper),c=[].concat(t.scrollParents.reference,t.scrollParents.popper);return r&&c.forEach((function(e){e.addEventListener("scroll",n.update,te)})),s&&l.addEventListener("resize",n.update,te),function(){r&&c.forEach((function(e){e.removeEventListener("scroll",n.update,te)})),s&&l.removeEventListener("resize",n.update,te)}},data:{}};var ie={left:"right",right:"left",bottom:"top",top:"bottom"};function oe(e){return e.replace(/left|right|bottom|top/g,(function(e){return ie[e]}))}var re={start:"end",end:"start"};function ae(e){return e.replace(/start|end/g,(function(e){return re[e]}))}function se(e){var t=D(e);return{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function le(e){return M(B(e)).left+se(e).scrollLeft}function ce(e){var t=H(e),n=t.overflow,i=t.overflowX,o=t.overflowY;return/auto|scroll|overlay|hidden/.test(n+o+i)}function ue(e){return["html","body","#document"].indexOf(L(e))>=0?e.ownerDocument.body:S(e)&&ce(e)?e:ue(q(e))}function de(e,t){var n;void 0===t&&(t=[]);var i=ue(e),o=i===(null==(n=e.ownerDocument)?void 0:n.body),r=D(i),a=o?[r].concat(r.visualViewport||[],ce(i)?i:[]):i,s=t.concat(a);return o?s:s.concat(de(q(a)))}function _e(e){return Object.assign({},e,{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function fe(e,t){return t===f?_e(function(e){var t=D(e),n=B(e),i=t.visualViewport,o=n.clientWidth,r=n.clientHeight,a=0,s=0;return i&&(o=i.width,r=i.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(a=i.offsetLeft,s=i.offsetTop)),{width:o,height:r,x:a+le(e),y:s}}(e)):S(t)?function(e){var t=M(e);return t.top=t.top+e.clientTop,t.left=t.left+e.clientLeft,t.bottom=t.top+e.clientHeight,t.right=t.left+e.clientWidth,t.width=e.clientWidth,t.height=e.clientHeight,t.x=t.left,t.y=t.top,t}(t):_e(function(e){var t,n=B(e),i=se(e),o=null==(t=e.ownerDocument)?void 0:t.body,r=F(n.scrollWidth,n.clientWidth,o?o.scrollWidth:0,o?o.clientWidth:0),a=F(n.scrollHeight,n.clientHeight,o?o.scrollHeight:0,o?o.clientHeight:0),s=-i.scrollLeft+le(e),l=-i.scrollTop;return"rtl"===H(o||n).direction&&(s+=F(n.clientWidth,o?o.clientWidth:0)-r),{width:r,height:a,x:s,y:l}}(B(e)))}function he(e){return e.split("-")[1]}function pe(e){var t,n=e.reference,i=e.element,l=e.placement,c=l?P(l):null,_=l?he(l):null,f=n.x+n.width/2-i.width/2,h=n.y+n.height/2-i.height/2;switch(c){case o:t={x:f,y:n.y-i.height};break;case r:t={x:f,y:n.y+n.height};break;case a:t={x:n.x+n.width,y:h};break;case s:t={x:n.x-i.width,y:h};break;default:t={x:n.x,y:n.y}}var p=c?U(c):null;if(null!=p){var m="y"===p?"height":"width";switch(_){case u:t[p]=t[p]-(n[m]/2-i[m]/2);break;case d:t[p]=t[p]+(n[m]/2-i[m]/2)}}return t}function me(e,t){void 0===t&&(t={});var n=t,i=n.placement,s=void 0===i?e.placement:i,l=n.boundary,u=void 0===l?_:l,d=n.rootBoundary,m=void 0===d?f:d,g=n.elementContext,b=void 0===g?h:g,v=n.altBoundary,y=void 0!==v&&v,w=n.padding,k=void 0===w?0:w,E=Q("number"!=typeof k?k:$(k,c)),T=b===h?p:h,x=e.elements.reference,A=e.rects.popper,O=e.elements[y?T:b],D=function(e,t,n){var i="clippingParents"===t?function(e){var t=de(q(e)),n=["absolute","fixed"].indexOf(H(e).position)>=0&&S(e)?K(e):e;return C(n)?t.filter((function(e){return C(e)&&I(e,n)&&"body"!==L(e)})):[]}(e):[].concat(t),o=[].concat(i,[n]),r=o[0],a=o.reduce((function(t,n){var i=fe(e,n);return t.top=F(i.top,t.top),t.right=Y(i.right,t.right),t.bottom=Y(i.bottom,t.bottom),t.left=F(i.left,t.left),t}),fe(e,r));return a.width=a.right-a.left,a.height=a.bottom-a.top,a.x=a.left,a.y=a.top,a}(C(O)?O:O.contextElement||B(e.elements.popper),u,m),j=M(x),N=pe({reference:j,element:A,strategy:"absolute",placement:s}),P=_e(Object.assign({},A,N)),R=b===h?P:j,z={top:D.top-R.top+E.top,bottom:R.bottom-D.bottom+E.bottom,left:D.left-R.left+E.left,right:R.right-D.right+E.right},W=e.modifiersData.offset;if(b===h&&W){var U=W[s];Object.keys(z).forEach((function(e){var t=[a,r].indexOf(e)>=0?1:-1,n=[o,r].indexOf(e)>=0?"y":"x";z[e]+=U[n]*t}))}return z}const ge={name:"flip",enabled:!0,phase:"main",fn:function(e){var t=e.state,n=e.options,i=e.name;if(!t.modifiersData[i]._skip){for(var d=n.mainAxis,_=void 0===d||d,f=n.altAxis,h=void 0===f||f,p=n.fallbackPlacements,b=n.padding,v=n.boundary,y=n.rootBoundary,w=n.altBoundary,k=n.flipVariations,E=void 0===k||k,T=n.allowedAutoPlacements,x=t.options.placement,A=P(x),O=p||(A!==x&&E?function(e){if(P(e)===l)return[];var t=oe(e);return[ae(e),t,ae(t)]}(x):[oe(x)]),L=[x].concat(O).reduce((function(e,n){return e.concat(P(n)===l?function(e,t){void 0===t&&(t={});var n=t,i=n.placement,o=n.boundary,r=n.rootBoundary,a=n.padding,s=n.flipVariations,l=n.allowedAutoPlacements,u=void 0===l?g:l,d=he(i),_=d?s?m:m.filter((function(e){return he(e)===d})):c,f=_.filter((function(e){return u.indexOf(e)>=0}));0===f.length&&(f=_);var h=f.reduce((function(t,n){return t[n]=me(e,{placement:n,boundary:o,rootBoundary:r,padding:a})[P(n)],t}),{});return Object.keys(h).sort((function(e,t){return h[e]-h[t]}))}(t,{placement:n,boundary:v,rootBoundary:y,padding:b,flipVariations:E,allowedAutoPlacements:T}):n)}),[]),D=t.rects.reference,C=t.rects.popper,S=new Map,j=!0,N=L[0],M=0;M<L.length;M++){var R=L[M],I=P(R),H=he(R)===u,z=[o,r].indexOf(I)>=0,B=z?"width":"height",q=me(t,{placement:R,boundary:v,rootBoundary:y,altBoundary:w,padding:b}),W=z?H?a:s:H?r:o;D[B]>C[B]&&(W=oe(W));var K=oe(W),U=[];if(_&&U.push(q[I]<=0),h&&U.push(q[W]<=0,q[K]<=0),U.every((function(e){return e}))){N=R,j=!1;break}S.set(R,U)}if(j)for(var F=function(e){var t=L.find((function(t){var n=S.get(t);if(n)return n.slice(0,e).every((function(e){return e}))}));if(t)return N=t,"break"},Y=E?3:1;Y>0&&"break"!==F(Y);Y--);t.placement!==N&&(t.modifiersData[i]._skip=!0,t.placement=N,t.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function be(e,t,n){return void 0===n&&(n={x:0,y:0}),{top:e.top-t.height-n.y,right:e.right-t.width+n.x,bottom:e.bottom-t.height+n.y,left:e.left-t.width-n.x}}function ve(e){return[o,a,r,s].some((function(t){return e[t]>=0}))}const ye={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(e){var t=e.state,n=e.name,i=t.rects.reference,o=t.rects.popper,r=t.modifiersData.preventOverflow,a=me(t,{elementContext:"reference"}),s=me(t,{altBoundary:!0}),l=be(a,i),c=be(s,o,r),u=ve(l),d=ve(c);t.modifiersData[n]={referenceClippingOffsets:l,popperEscapeOffsets:c,isReferenceHidden:u,hasPopperEscaped:d},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":d})}},we={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(e){var t=e.state,n=e.options,i=e.name,r=n.offset,l=void 0===r?[0,0]:r,c=g.reduce((function(e,n){return e[n]=function(e,t,n){var i=P(e),r=[s,o].indexOf(i)>=0?-1:1,l="function"==typeof n?n(Object.assign({},t,{placement:e})):n,c=l[0],u=l[1];return c=c||0,u=(u||0)*r,[s,a].indexOf(i)>=0?{x:u,y:c}:{x:c,y:u}}(n,t.rects,l),e}),{}),u=c[t.placement],d=u.x,_=u.y;null!=t.modifiersData.popperOffsets&&(t.modifiersData.popperOffsets.x+=d,t.modifiersData.popperOffsets.y+=_),t.modifiersData[i]=c}},ke={name:"popperOffsets",enabled:!0,phase:"read",fn:function(e){var t=e.state,n=e.name;t.modifiersData[n]=pe({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})},data:{}},Ee={name:"preventOverflow",enabled:!0,phase:"main",fn:function(e){var t=e.state,n=e.options,i=e.name,l=n.mainAxis,c=void 0===l||l,d=n.altAxis,_=void 0!==d&&d,f=n.boundary,h=n.rootBoundary,p=n.altBoundary,m=n.padding,g=n.tether,b=void 0===g||g,v=n.tetherOffset,y=void 0===v?0:v,w=me(t,{boundary:f,rootBoundary:h,padding:m,altBoundary:p}),k=P(t.placement),E=he(t.placement),T=!E,x=U(k),A="x"===x?"y":"x",O=t.modifiersData.popperOffsets,L=t.rects.reference,D=t.rects.popper,C="function"==typeof y?y(Object.assign({},t.rects,{placement:t.placement})):y,S={x:0,y:0};if(O){if(c||_){var j="y"===x?o:s,N="y"===x?r:a,M="y"===x?"height":"width",I=O[x],H=O[x]+w[j],z=O[x]-w[N],B=b?-D[M]/2:0,q=E===u?L[M]:D[M],W=E===u?-D[M]:-L[M],V=t.elements.arrow,Q=b&&V?R(V):{width:0,height:0},$=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},J=$[j],G=$[N],Z=X(0,L[M],Q[M]),ee=T?L[M]/2-B-Z-J-C:q-Z-J-C,te=T?-L[M]/2+B+Z+G+C:W+Z+G+C,ne=t.elements.arrow&&K(t.elements.arrow),ie=ne?"y"===x?ne.clientTop||0:ne.clientLeft||0:0,oe=t.modifiersData.offset?t.modifiersData.offset[t.placement][x]:0,re=O[x]+ee-oe-ie,ae=O[x]+te-oe;if(c){var se=X(b?Y(H,re):H,I,b?F(z,ae):z);O[x]=se,S[x]=se-I}if(_){var le="x"===x?o:s,ce="x"===x?r:a,ue=O[A],de=ue+w[le],_e=ue-w[ce],fe=X(b?Y(de,re):de,ue,b?F(_e,ae):_e);O[A]=fe,S[A]=fe-ue}}t.modifiersData[i]=S}},requiresIfExists:["offset"]};function Te(e,t,n){void 0===n&&(n=!1);var i,o,r=B(t),a=M(e),s=S(t),l={scrollLeft:0,scrollTop:0},c={x:0,y:0};return(s||!s&&!n)&&(("body"!==L(t)||ce(r))&&(l=(i=t)!==D(i)&&S(i)?{scrollLeft:(o=i).scrollLeft,scrollTop:o.scrollTop}:se(i)),S(t)?((c=M(t)).x+=t.clientLeft,c.y+=t.clientTop):r&&(c.x=le(r))),{x:a.left+l.scrollLeft-c.x,y:a.top+l.scrollTop-c.y,width:a.width,height:a.height}}function xe(e){var t=new Map,n=new Set,i=[];function o(e){n.add(e.name),[].concat(e.requires||[],e.requiresIfExists||[]).forEach((function(e){if(!n.has(e)){var i=t.get(e);i&&o(i)}})),i.push(e)}return e.forEach((function(e){t.set(e.name,e)})),e.forEach((function(e){n.has(e.name)||o(e)})),i}var Ae={placement:"bottom",modifiers:[],strategy:"absolute"};function Oe(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return!t.some((function(e){return!(e&&"function"==typeof e.getBoundingClientRect)}))}function Le(e){void 0===e&&(e={});var t=e,n=t.defaultModifiers,i=void 0===n?[]:n,o=t.defaultOptions,r=void 0===o?Ae:o;return function(e,t,n){void 0===n&&(n=r);var o,a,s={placement:"bottom",orderedModifiers:[],options:Object.assign({},Ae,r),modifiersData:{},elements:{reference:e,popper:t},attributes:{},styles:{}},l=[],c=!1,u={state:s,setOptions:function(n){d(),s.options=Object.assign({},r,s.options,n),s.scrollParents={reference:C(e)?de(e):e.contextElement?de(e.contextElement):[],popper:de(t)};var o,a,c=function(e){var t=xe(e);return O.reduce((function(e,n){return e.concat(t.filter((function(e){return e.phase===n})))}),[])}((o=[].concat(i,s.options.modifiers),a=o.reduce((function(e,t){var n=e[t.name];return e[t.name]=n?Object.assign({},n,t,{options:Object.assign({},n.options,t.options),data:Object.assign({},n.data,t.data)}):t,e}),{}),Object.keys(a).map((function(e){return a[e]}))));return s.orderedModifiers=c.filter((function(e){return e.enabled})),s.orderedModifiers.forEach((function(e){var t=e.name,n=e.options,i=void 0===n?{}:n,o=e.effect;if("function"==typeof o){var r=o({state:s,name:t,instance:u,options:i});l.push(r||function(){})}})),u.update()},forceUpdate:function(){if(!c){var e=s.elements,t=e.reference,n=e.popper;if(Oe(t,n)){s.rects={reference:Te(t,K(n),"fixed"===s.options.strategy),popper:R(n)},s.reset=!1,s.placement=s.options.placement,s.orderedModifiers.forEach((function(e){return s.modifiersData[e.name]=Object.assign({},e.data)}));for(var i=0;i<s.orderedModifiers.length;i++)if(!0!==s.reset){var o=s.orderedModifiers[i],r=o.fn,a=o.options,l=void 0===a?{}:a,d=o.name;"function"==typeof r&&(s=r({state:s,options:l,name:d,instance:u})||s)}else s.reset=!1,i=-1}}},update:(o=function(){return new Promise((function(e){u.forceUpdate(),e(s)}))},function(){return a||(a=new Promise((function(e){Promise.resolve().then((function(){a=void 0,e(o())}))}))),a}),destroy:function(){d(),c=!0}};if(!Oe(e,t))return u;function d(){l.forEach((function(e){return e()})),l=[]}return u.setOptions(n).then((function(e){!c&&n.onFirstUpdate&&n.onFirstUpdate(e)})),u}}var De=Le(),Ce=Le({defaultModifiers:[ne,ke,ee,N,we,ge,Ee,J,ye]}),Se=Le({defaultModifiers:[ne,ke,ee,N]});function je(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function Ne(e,t,n){return t&&je(e.prototype,t),n&&je(e,n),e}function Pe(){return(Pe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function Me(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Re(e,t)}function Re(e,t){return(Re=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ie="transitionend",He=function(e){do{e+=Math.floor(1e6*Math.random())}while(document.getElementById(e));return e},ze=function(e){var t=e.getAttribute("data-bs-target");if(!t||"#"===t){var n=e.getAttribute("href");if(!n||!n.includes("#")&&!n.startsWith("."))return null;n.includes("#")&&!n.startsWith("#")&&(n="#"+n.split("#")[1]),t=n&&"#"!==n?n.trim():null}return t},Be=function(e){var t=ze(e);return t&&document.querySelector(t)?t:null},qe=function(e){var t=ze(e);return t?document.querySelector(t):null},We=function(e){if(!e)return 0;var t=window.getComputedStyle(e),n=t.transitionDuration,i=t.transitionDelay,o=Number.parseFloat(n),r=Number.parseFloat(i);return o||r?(n=n.split(",")[0],i=i.split(",")[0],1e3*(Number.parseFloat(n)+Number.parseFloat(i))):0},Ke=function(e){e.dispatchEvent(new Event(Ie))},Ue=function(e){return(e[0]||e).nodeType},Fe=function(e,t){var n=!1,i=t+5;e.addEventListener(Ie,(function t(){n=!0,e.removeEventListener(Ie,t)})),setTimeout((function(){n||Ke(e)}),i)},Ye=function(e,t,n){Object.keys(n).forEach((function(i){var o,r=n[i],a=t[i],s=a&&Ue(a)?"element":null==(o=a)?""+o:{}.toString.call(o).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(r).test(s))throw new TypeError(e.toUpperCase()+': Option "'+i+'" provided type "'+s+'" but expected type "'+r+'".')}))},Ve=function(e){if(!e)return!1;if(e.style&&e.parentNode&&e.parentNode.style){var t=getComputedStyle(e),n=getComputedStyle(e.parentNode);return"none"!==t.display&&"none"!==n.display&&"hidden"!==t.visibility}return!1},Xe=function e(t){if(!document.documentElement.attachShadow)return null;if("function"==typeof t.getRootNode){var n=t.getRootNode();return n instanceof ShadowRoot?n:null}return t instanceof ShadowRoot?t:t.parentNode?e(t.parentNode):null},Qe=function(){return function(){}},$e=function(e){return e.offsetHeight},Je=function(){var e=window.jQuery;return e&&!document.body.hasAttribute("data-bs-no-jquery")?e:null},Ge="rtl"===document.documentElement.dir,Ze=function(e,t){var n;n=function(){var n=Je();if(n){var i=n.fn[e];n.fn[e]=t.jQueryInterface,n.fn[e].Constructor=t,n.fn[e].noConflict=function(){return n.fn[e]=i,t.jQueryInterface}}},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",n):n()},et=function(){var e={},t=1;return{set:function(n,i,o){void 0===n.bsKey&&(n.bsKey={key:i,id:t},t++),e[n.bsKey.id]=o},get:function(t,n){if(!t||void 0===t.bsKey)return null;var i=t.bsKey;return i.key===n?e[i.id]:null},delete:function(t,n){if(void 0!==t.bsKey){var i=t.bsKey;i.key===n&&(delete e[i.id],delete t.bsKey)}}}}(),tt=function(e,t,n){et.set(e,t,n)},nt=function(e,t){return et.get(e,t)},it=/[^.]*(?=\..*)\.|.*/,ot=/\..*/,rt=/::\d+$/,at={},st=1,lt={mouseenter:"mouseover",mouseleave:"mouseout"},ct=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function ut(e,t){return t&&t+"::"+st++||e.uidEvent||st++}function dt(e){var t=ut(e);return e.uidEvent=t,at[t]=at[t]||{},at[t]}function _t(e,t,n){void 0===n&&(n=null);for(var i=Object.keys(e),o=0,r=i.length;o<r;o++){var a=e[i[o]];if(a.originalHandler===t&&a.delegationSelector===n)return a}return null}function ft(e,t,n){var i="string"==typeof t,o=i?n:t,r=e.replace(ot,""),a=lt[r];return a&&(r=a),ct.has(r)||(r=e),[i,o,r]}function ht(e,t,n,i,o){if("string"==typeof t&&e){n||(n=i,i=null);var r=ft(t,n,i),a=r[0],s=r[1],l=r[2],c=dt(e),u=c[l]||(c[l]={}),d=_t(u,s,a?n:null);if(d)d.oneOff=d.oneOff&&o;else{var _=ut(s,t.replace(it,"")),f=a?function(e,t,n){return function i(o){for(var r=e.querySelectorAll(t),a=o.target;a&&a!==this;a=a.parentNode)for(var s=r.length;s--;)if(r[s]===a)return o.delegateTarget=a,i.oneOff&&mt.off(e,o.type,n),n.apply(a,[o]);return null}}(e,n,i):function(e,t){return function n(i){return i.delegateTarget=e,n.oneOff&&mt.off(e,i.type,t),t.apply(e,[i])}}(e,n);f.delegationSelector=a?n:null,f.originalHandler=s,f.oneOff=o,f.uidEvent=_,u[_]=f,e.addEventListener(l,f,a)}}}function pt(e,t,n,i,o){var r=_t(t[n],i,o);r&&(e.removeEventListener(n,r,Boolean(o)),delete t[n][r.uidEvent])}var mt={on:function(e,t,n,i){ht(e,t,n,i,!1)},one:function(e,t,n,i){ht(e,t,n,i,!0)},off:function(e,t,n,i){if("string"==typeof t&&e){var o=ft(t,n,i),r=o[0],a=o[1],s=o[2],l=s!==t,c=dt(e),u=t.startsWith(".");if(void 0===a){u&&Object.keys(c).forEach((function(n){!function(e,t,n,i){var o=t[n]||{};Object.keys(o).forEach((function(r){if(r.includes(i)){var a=o[r];pt(e,t,n,a.originalHandler,a.delegationSelector)}}))}(e,c,n,t.slice(1))}));var d=c[s]||{};Object.keys(d).forEach((function(n){var i=n.replace(rt,"");if(!l||t.includes(i)){var o=d[n];pt(e,c,s,o.originalHandler,o.delegationSelector)}}))}else{if(!c||!c[s])return;pt(e,c,s,a,r?n:null)}}},trigger:function(e,t,n){if("string"!=typeof t||!e)return null;var i,o=Je(),r=t.replace(ot,""),a=t!==r,s=ct.has(r),l=!0,c=!0,u=!1,d=null;return a&&o&&(i=o.Event(t,n),o(e).trigger(i),l=!i.isPropagationStopped(),c=!i.isImmediatePropagationStopped(),u=i.isDefaultPrevented()),s?(d=document.createEvent("HTMLEvents")).initEvent(r,l,!0):d=new CustomEvent(t,{bubbles:l,cancelable:!0}),void 0!==n&&Object.keys(n).forEach((function(e){Object.defineProperty(d,e,{get:function(){return n[e]}})})),u&&d.preventDefault(),c&&e.dispatchEvent(d),d.defaultPrevented&&void 0!==i&&i.preventDefault(),d}},gt=function(){function e(e){e&&(this._element=e,tt(e,this.constructor.DATA_KEY,this))}return e.prototype.dispose=function(){var e,t;e=this._element,t=this.constructor.DATA_KEY,et.delete(e,t),this._element=null},e.getInstance=function(e){return nt(e,this.DATA_KEY)},Ne(e,null,[{key:"VERSION",get:function(){return"5.0.0-beta2"}}]),e}(),bt="bs.alert",vt=function(e){function t(){return e.apply(this,arguments)||this}Me(t,e);var n=t.prototype;return n.close=function(e){var t=e?this._getRootElement(e):this._element,n=this._triggerCloseEvent(t);null===n||n.defaultPrevented||this._removeElement(t)},n._getRootElement=function(e){return qe(e)||e.closest(".alert")},n._triggerCloseEvent=function(e){return mt.trigger(e,"close.bs.alert")},n._removeElement=function(e){var t=this;if(e.classList.remove("show"),e.classList.contains("fade")){var n=We(e);mt.one(e,"transitionend",(function(){return t._destroyElement(e)})),Fe(e,n)}else this._destroyElement(e)},n._destroyElement=function(e){e.parentNode&&e.parentNode.removeChild(e),mt.trigger(e,"closed.bs.alert")},t.jQueryInterface=function(e){return this.each((function(){var n=nt(this,bt);n||(n=new t(this)),"close"===e&&n[e](this)}))},t.handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},Ne(t,null,[{key:"DATA_KEY",get:function(){return bt}}]),t}(gt);mt.on(document,"click.bs.alert.data-api",'[data-bs-dismiss="alert"]',vt.handleDismiss(new vt)),Ze("alert",vt);var yt="bs.button",wt='[data-bs-toggle="button"]',kt=function(e){function t(){return e.apply(this,arguments)||this}return Me(t,e),t.prototype.toggle=function(){this._element.setAttribute("aria-pressed",this._element.classList.toggle("active"))},t.jQueryInterface=function(e){return this.each((function(){var n=nt(this,yt);n||(n=new t(this)),"toggle"===e&&n[e]()}))},Ne(t,null,[{key:"DATA_KEY",get:function(){return yt}}]),t}(gt);function Et(e){return"true"===e||"false"!==e&&(e===Number(e).toString()?Number(e):""===e||"null"===e?null:e)}function Tt(e){return e.replace(/[A-Z]/g,(function(e){return"-"+e.toLowerCase()}))}mt.on(document,"click.bs.button.data-api",wt,(function(e){e.preventDefault();var t=e.target.closest(wt),n=nt(t,yt);n||(n=new kt(t)),n.toggle()})),Ze("button",kt);var xt={setDataAttribute:function(e,t,n){e.setAttribute("data-bs-"+Tt(t),n)},removeDataAttribute:function(e,t){e.removeAttribute("data-bs-"+Tt(t))},getDataAttributes:function(e){if(!e)return{};var t={};return Object.keys(e.dataset).filter((function(e){return e.startsWith("bs")})).forEach((function(n){var i=n.replace(/^bs/,"");i=i.charAt(0).toLowerCase()+i.slice(1,i.length),t[i]=Et(e.dataset[n])})),t},getDataAttribute:function(e,t){return Et(e.getAttribute("data-bs-"+Tt(t)))},offset:function(e){var t=e.getBoundingClientRect();return{top:t.top+document.body.scrollTop,left:t.left+document.body.scrollLeft}},position:function(e){return{top:e.offsetTop,left:e.offsetLeft}}},At=function(e,t){var n;return void 0===t&&(t=document.documentElement),(n=[]).concat.apply(n,Element.prototype.querySelectorAll.call(t,e))},Ot=function(e,t){return void 0===t&&(t=document.documentElement),Element.prototype.querySelector.call(t,e)},Lt=function(e,t){var n;return(n=[]).concat.apply(n,e.children).filter((function(e){return e.matches(t)}))},Dt=function(e,t){for(var n=e.previousElementSibling;n;){if(n.matches(t))return[n];n=n.previousElementSibling}return[]},Ct="carousel",St="bs.carousel",jt={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},Nt={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},Pt="next",Mt="prev",Rt="slid.bs.carousel",It="active",Ht=".active.carousel-item",zt="touch",Bt=function(e){function t(t,n){var i;return(i=e.call(this,t)||this)._items=null,i._interval=null,i._activeElement=null,i._isPaused=!1,i._isSliding=!1,i.touchTimeout=null,i.touchStartX=0,i.touchDeltaX=0,i._config=i._getConfig(n),i._indicatorsElement=Ot(".carousel-indicators",i._element),i._touchSupported="ontouchstart"in document.documentElement||navigator.maxTouchPoints>0,i._pointerEvent=Boolean(window.PointerEvent),i._addEventListeners(),i}Me(t,e);var n=t.prototype;return n.next=function(){this._isSliding||this._slide(Pt)},n.nextWhenVisible=function(){!document.hidden&&Ve(this._element)&&this.next()},n.prev=function(){this._isSliding||this._slide(Mt)},n.pause=function(e){e||(this._isPaused=!0),Ot(".carousel-item-next, .carousel-item-prev",this._element)&&(Ke(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},n.cycle=function(e){e||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config&&this._config.interval&&!this._isPaused&&(this._updateInterval(),this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},n.to=function(e){var t=this;this._activeElement=Ot(Ht,this._element);var n=this._getItemIndex(this._activeElement);if(!(e>this._items.length-1||e<0))if(this._isSliding)mt.one(this._element,Rt,(function(){return t.to(e)}));else{if(n===e)return this.pause(),void this.cycle();var i=e>n?Pt:Mt;this._slide(i,this._items[e])}},n.dispose=function(){e.prototype.dispose.call(this),mt.off(this._element,".bs.carousel"),this._items=null,this._config=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},n._getConfig=function(e){return e=Pe({},jt,e),Ye(Ct,e,Nt),e},n._handleSwipe=function(){var e=Math.abs(this.touchDeltaX);if(!(e<=40)){var t=e/this.touchDeltaX;this.touchDeltaX=0,t>0&&(Ge?this.next():this.prev()),t<0&&(Ge?this.prev():this.next())}},n._addEventListeners=function(){var e=this;this._config.keyboard&&mt.on(this._element,"keydown.bs.carousel",(function(t){return e._keydown(t)})),"hover"===this._config.pause&&(mt.on(this._element,"mouseenter.bs.carousel",(function(t){return e.pause(t)})),mt.on(this._element,"mouseleave.bs.carousel",(function(t){return e.cycle(t)}))),this._config.touch&&this._touchSupported&&this._addTouchEventListeners()},n._addTouchEventListeners=function(){var e=this,t=function(t){!e._pointerEvent||"pen"!==t.pointerType&&t.pointerType!==zt?e._pointerEvent||(e.touchStartX=t.touches[0].clientX):e.touchStartX=t.clientX},n=function(t){!e._pointerEvent||"pen"!==t.pointerType&&t.pointerType!==zt||(e.touchDeltaX=t.clientX-e.touchStartX),e._handleSwipe(),"hover"===e._config.pause&&(e.pause(),e.touchTimeout&&clearTimeout(e.touchTimeout),e.touchTimeout=setTimeout((function(t){return e.cycle(t)}),500+e._config.interval))};At(".carousel-item img",this._element).forEach((function(e){mt.on(e,"dragstart.bs.carousel",(function(e){return e.preventDefault()}))})),this._pointerEvent?(mt.on(this._element,"pointerdown.bs.carousel",(function(e){return t(e)})),mt.on(this._element,"pointerup.bs.carousel",(function(e){return n(e)})),this._element.classList.add("pointer-event")):(mt.on(this._element,"touchstart.bs.carousel",(function(e){return t(e)})),mt.on(this._element,"touchmove.bs.carousel",(function(t){return function(t){t.touches&&t.touches.length>1?e.touchDeltaX=0:e.touchDeltaX=t.touches[0].clientX-e.touchStartX}(t)})),mt.on(this._element,"touchend.bs.carousel",(function(e){return n(e)})))},n._keydown=function(e){/input|textarea/i.test(e.target.tagName)||("ArrowLeft"===e.key?(e.preventDefault(),Ge?this.next():this.prev()):"ArrowRight"===e.key&&(e.preventDefault(),Ge?this.prev():this.next()))},n._getItemIndex=function(e){return this._items=e&&e.parentNode?At(".carousel-item",e.parentNode):[],this._items.indexOf(e)},n._getItemByDirection=function(e,t){var n=e===Pt,i=e===Mt,o=this._getItemIndex(t),r=this._items.length-1;if((i&&0===o||n&&o===r)&&!this._config.wrap)return t;var a=(o+(e===Mt?-1:1))%this._items.length;return-1===a?this._items[this._items.length-1]:this._items[a]},n._triggerSlideEvent=function(e,t){var n=this._getItemIndex(e),i=this._getItemIndex(Ot(Ht,this._element));return mt.trigger(this._element,"slide.bs.carousel",{relatedTarget:e,direction:t,from:i,to:n})},n._setActiveIndicatorElement=function(e){if(this._indicatorsElement){var t=Ot(".active",this._indicatorsElement);t.classList.remove(It),t.removeAttribute("aria-current");for(var n=At("[data-bs-target]",this._indicatorsElement),i=0;i<n.length;i++)if(Number.parseInt(n[i].getAttribute("data-bs-slide-to"),10)===this._getItemIndex(e)){n[i].classList.add(It),n[i].setAttribute("aria-current","true");break}}},n._updateInterval=function(){var e=this._activeElement||Ot(Ht,this._element);if(e){var t=Number.parseInt(e.getAttribute("data-bs-interval"),10);t?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,this._config.interval=t):this._config.interval=this._config.defaultInterval||this._config.interval}},n._slide=function(e,t){var n=this,i=Ot(Ht,this._element),o=this._getItemIndex(i),r=t||i&&this._getItemByDirection(e,i),a=this._getItemIndex(r),s=Boolean(this._interval),l=e===Pt?"carousel-item-start":"carousel-item-end",c=e===Pt?"carousel-item-next":"carousel-item-prev",u=e===Pt?"left":"right";if(r&&r.classList.contains(It))this._isSliding=!1;else if(!this._triggerSlideEvent(r,u).defaultPrevented&&i&&r){if(this._isSliding=!0,s&&this.pause(),this._setActiveIndicatorElement(r),this._activeElement=r,this._element.classList.contains("slide")){r.classList.add(c),$e(r),i.classList.add(l),r.classList.add(l);var d=We(i);mt.one(i,"transitionend",(function(){r.classList.remove(l,c),r.classList.add(It),i.classList.remove(It,c,l),n._isSliding=!1,setTimeout((function(){mt.trigger(n._element,Rt,{relatedTarget:r,direction:u,from:o,to:a})}),0)})),Fe(i,d)}else i.classList.remove(It),r.classList.add(It),this._isSliding=!1,mt.trigger(this._element,Rt,{relatedTarget:r,direction:u,from:o,to:a});s&&this.cycle()}},t.carouselInterface=function(e,n){var i=nt(e,St),o=Pe({},jt,xt.getDataAttributes(e));"object"==typeof n&&(o=Pe({},o,n));var r="string"==typeof n?n:o.slide;if(i||(i=new t(e,o)),"number"==typeof n)i.to(n);else if("string"==typeof r){if(void 0===i[r])throw new TypeError('No method named "'+r+'"');i[r]()}else o.interval&&o.ride&&(i.pause(),i.cycle())},t.jQueryInterface=function(e){return this.each((function(){t.carouselInterface(this,e)}))},t.dataApiClickHandler=function(e){var n=qe(this);if(n&&n.classList.contains("carousel")){var i=Pe({},xt.getDataAttributes(n),xt.getDataAttributes(this)),o=this.getAttribute("data-bs-slide-to");o&&(i.interval=!1),t.carouselInterface(n,i),o&&nt(n,St).to(o),e.preventDefault()}},Ne(t,null,[{key:"Default",get:function(){return jt}},{key:"DATA_KEY",get:function(){return St}}]),t}(gt);mt.on(document,"click.bs.carousel.data-api","[data-bs-slide], [data-bs-slide-to]",Bt.dataApiClickHandler),mt.on(window,"load.bs.carousel.data-api",(function(){for(var e=At('[data-bs-ride="carousel"]'),t=0,n=e.length;t<n;t++)Bt.carouselInterface(e[t],nt(e[t],St))})),Ze(Ct,Bt);var qt="collapse",Wt="bs.collapse",Kt={toggle:!0,parent:""},Ut={toggle:"boolean",parent:"(string|element)"},Ft="show",Yt="collapse",Vt="collapsing",Xt="collapsed",Qt="width",$t='[data-bs-toggle="collapse"]',Jt=function(e){function t(t,n){var i;(i=e.call(this,t)||this)._isTransitioning=!1,i._config=i._getConfig(n),i._triggerArray=At($t+'[href="#'+t.id+'"],'+$t+'[data-bs-target="#'+t.id+'"]');for(var o=At($t),r=0,a=o.length;r<a;r++){var s=o[r],l=Be(s),c=At(l).filter((function(e){return e===t}));null!==l&&c.length&&(i._selector=l,i._triggerArray.push(s))}return i._parent=i._config.parent?i._getParent():null,i._config.parent||i._addAriaAndCollapsedClass(i._element,i._triggerArray),i._config.toggle&&i.toggle(),i}Me(t,e);var n=t.prototype;return n.toggle=function(){this._element.classList.contains(Ft)?this.hide():this.show()},n.show=function(){var e=this;if(!this._isTransitioning&&!this._element.classList.contains(Ft)){var n,i;this._parent&&0===(n=At(".show, .collapsing",this._parent).filter((function(t){return"string"==typeof e._config.parent?t.getAttribute("data-bs-parent")===e._config.parent:t.classList.contains(Yt)}))).length&&(n=null);var o=Ot(this._selector);if(n){var r=n.find((function(e){return o!==e}));if((i=r?nt(r,Wt):null)&&i._isTransitioning)return}if(!mt.trigger(this._element,"show.bs.collapse").defaultPrevented){n&&n.forEach((function(e){o!==e&&t.collapseInterface(e,"hide"),i||tt(e,Wt,null)}));var a=this._getDimension();this._element.classList.remove(Yt),this._element.classList.add(Vt),this._element.style[a]=0,this._triggerArray.length&&this._triggerArray.forEach((function(e){e.classList.remove(Xt),e.setAttribute("aria-expanded",!0)})),this.setTransitioning(!0);var s="scroll"+(a[0].toUpperCase()+a.slice(1)),l=We(this._element);mt.one(this._element,"transitionend",(function(){e._element.classList.remove(Vt),e._element.classList.add(Yt,Ft),e._element.style[a]="",e.setTransitioning(!1),mt.trigger(e._element,"shown.bs.collapse")})),Fe(this._element,l),this._element.style[a]=this._element[s]+"px"}}},n.hide=function(){var e=this;if(!this._isTransitioning&&this._element.classList.contains(Ft)&&!mt.trigger(this._element,"hide.bs.collapse").defaultPrevented){var t=this._getDimension();this._element.style[t]=this._element.getBoundingClientRect()[t]+"px",$e(this._element),this._element.classList.add(Vt),this._element.classList.remove(Yt,Ft);var n=this._triggerArray.length;if(n>0)for(var i=0;i<n;i++){var o=this._triggerArray[i],r=qe(o);r&&!r.classList.contains(Ft)&&(o.classList.add(Xt),o.setAttribute("aria-expanded",!1))}this.setTransitioning(!0),this._element.style[t]="";var a=We(this._element);mt.one(this._element,"transitionend",(function(){e.setTransitioning(!1),e._element.classList.remove(Vt),e._element.classList.add(Yt),mt.trigger(e._element,"hidden.bs.collapse")})),Fe(this._element,a)}},n.setTransitioning=function(e){this._isTransitioning=e},n.dispose=function(){e.prototype.dispose.call(this),this._config=null,this._parent=null,this._triggerArray=null,this._isTransitioning=null},n._getConfig=function(e){return(e=Pe({},Kt,e)).toggle=Boolean(e.toggle),Ye(qt,e,Ut),e},n._getDimension=function(){return this._element.classList.contains(Qt)?Qt:"height"},n._getParent=function(){var e=this,t=this._config.parent;return Ue(t)?void 0===t.jquery&&void 0===t[0]||(t=t[0]):t=Ot(t),At($t+'[data-bs-parent="'+t+'"]',t).forEach((function(t){var n=qe(t);e._addAriaAndCollapsedClass(n,[t])})),t},n._addAriaAndCollapsedClass=function(e,t){if(e&&t.length){var n=e.classList.contains(Ft);t.forEach((function(e){n?e.classList.remove(Xt):e.classList.add(Xt),e.setAttribute("aria-expanded",n)}))}},t.collapseInterface=function(e,n){var i=nt(e,Wt),o=Pe({},Kt,xt.getDataAttributes(e),"object"==typeof n&&n?n:{});if(!i&&o.toggle&&"string"==typeof n&&/show|hide/.test(n)&&(o.toggle=!1),i||(i=new t(e,o)),"string"==typeof n){if(void 0===i[n])throw new TypeError('No method named "'+n+'"');i[n]()}},t.jQueryInterface=function(e){return this.each((function(){t.collapseInterface(this,e)}))},Ne(t,null,[{key:"Default",get:function(){return Kt}},{key:"DATA_KEY",get:function(){return Wt}}]),t}(gt);mt.on(document,"click.bs.collapse.data-api",$t,(function(e){("A"===e.target.tagName||e.delegateTarget&&"A"===e.delegateTarget.tagName)&&e.preventDefault();var t=xt.getDataAttributes(this),n=Be(this);At(n).forEach((function(e){var n,i=nt(e,Wt);i?(null===i._parent&&"string"==typeof t.parent&&(i._config.parent=t.parent,i._parent=i._getParent()),n="toggle"):n=t,Jt.collapseInterface(e,n)}))})),Ze(qt,Jt);var Gt="dropdown",Zt="bs.dropdown",en="Escape",tn="Space",nn="ArrowUp",on="ArrowDown",rn=new RegExp("ArrowUp|ArrowDown|Escape"),an="hide.bs.dropdown",sn="hidden.bs.dropdown",ln="click.bs.dropdown.data-api",cn="keydown.bs.dropdown.data-api",un="disabled",dn="show",_n='[data-bs-toggle="dropdown"]',fn=".dropdown-menu",hn=Ge?"top-end":"top-start",pn=Ge?"top-start":"top-end",mn=Ge?"bottom-end":"bottom-start",gn=Ge?"bottom-start":"bottom-end",bn=Ge?"left-start":"right-start",vn=Ge?"right-start":"left-start",yn={offset:[0,2],flip:!0,boundary:"clippingParents",reference:"toggle",display:"dynamic",popperConfig:null},wn={offset:"(array|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element|object)",display:"string",popperConfig:"(null|object|function)"},kn=function(e){function t(t,n){var i;return(i=e.call(this,t)||this)._popper=null,i._config=i._getConfig(n),i._menu=i._getMenuElement(),i._inNavbar=i._detectNavbar(),i._addEventListeners(),i}Me(t,e);var n=t.prototype;return n.toggle=function(){if(!this._element.disabled&&!this._element.classList.contains(un)){var e=this._element.classList.contains(dn);t.clearMenus(),e||this.show()}},n.show=function(){if(!(this._element.disabled||this._element.classList.contains(un)||this._menu.classList.contains(dn))){var e=t.getParentFromElement(this._element),n={relatedTarget:this._element};if(!mt.trigger(this._element,"show.bs.dropdown",n).defaultPrevented){if(this._inNavbar)xt.setDataAttribute(this._menu,"popper","none");else{if(void 0===i)throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");var o=this._element;"parent"===this._config.reference?o=e:Ue(this._config.reference)?(o=this._config.reference,void 0!==this._config.reference.jquery&&(o=this._config.reference[0])):"object"==typeof this._config.reference&&(o=this._config.reference);var r=this._getPopperConfig(),a=r.modifiers.find((function(e){return"applyStyles"===e.name&&!1===e.enabled}));this._popper=Ce(o,this._menu,r),a&&xt.setDataAttribute(this._menu,"popper","static")}var s;"ontouchstart"in document.documentElement&&!e.closest(".navbar-nav")&&(s=[]).concat.apply(s,document.body.children).forEach((function(e){return mt.on(e,"mouseover",null,(function(){}))})),this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.toggle(dn),this._element.classList.toggle(dn),mt.trigger(this._element,"shown.bs.dropdown",n)}}},n.hide=function(){if(!this._element.disabled&&!this._element.classList.contains(un)&&this._menu.classList.contains(dn)){var e={relatedTarget:this._element};mt.trigger(this._element,an,e).defaultPrevented||(this._popper&&this._popper.destroy(),this._menu.classList.toggle(dn),this._element.classList.toggle(dn),xt.removeDataAttribute(this._menu,"popper"),mt.trigger(this._element,sn,e))}},n.dispose=function(){e.prototype.dispose.call(this),mt.off(this._element,".bs.dropdown"),this._menu=null,this._popper&&(this._popper.destroy(),this._popper=null)},n.update=function(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()},n._addEventListeners=function(){var e=this;mt.on(this._element,"click.bs.dropdown",(function(t){t.preventDefault(),t.stopPropagation(),e.toggle()}))},n._getConfig=function(e){if(e=Pe({},this.constructor.Default,xt.getDataAttributes(this._element),e),Ye(Gt,e,this.constructor.DefaultType),"object"==typeof e.reference&&!Ue(e.reference)&&"function"!=typeof e.reference.getBoundingClientRect)throw new TypeError(Gt.toUpperCase()+': Option "reference" provided type "object" without a required "getBoundingClientRect" method.');return e},n._getMenuElement=function(){return function(e,t){for(var n=e.nextElementSibling;n;){if(n.matches(t))return[n];n=n.nextElementSibling}return[]}(this._element,fn)[0]},n._getPlacement=function(){var e=this._element.parentNode;if(e.classList.contains("dropend"))return bn;if(e.classList.contains("dropstart"))return vn;var t="end"===getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();return e.classList.contains("dropup")?t?pn:hn:t?gn:mn},n._detectNavbar=function(){return null!==this._element.closest(".navbar")},n._getOffset=function(){var e=this,t=this._config.offset;return"string"==typeof t?t.split(",").map((function(e){return Number.parseInt(e,10)})):"function"==typeof t?function(n){return t(n,e._element)}:t},n._getPopperConfig=function(){var e={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{altBoundary:this._config.flip,boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return"static"===this._config.display&&(e.modifiers=[{name:"applyStyles",enabled:!1}]),Pe({},e,"function"==typeof this._config.popperConfig?this._config.popperConfig(e):this._config.popperConfig)},t.dropdownInterface=function(e,n){var i=nt(e,Zt);if(i||(i=new t(e,"object"==typeof n?n:null)),"string"==typeof n){if(void 0===i[n])throw new TypeError('No method named "'+n+'"');i[n]()}},t.jQueryInterface=function(e){return this.each((function(){t.dropdownInterface(this,e)}))},t.clearMenus=function(e){if(!e||2!==e.button&&("keyup"!==e.type||"Tab"===e.key))for(var t=At(_n),n=0,i=t.length;n<i;n++){var o=nt(t[n],Zt),r={relatedTarget:t[n]};if(e&&"click"===e.type&&(r.clickEvent=e),o){var a,s=o._menu;if(t[n].classList.contains(dn)&&!(e&&("click"===e.type&&/input|textarea/i.test(e.target.tagName)||"keyup"===e.type&&"Tab"===e.key)&&s.contains(e.target)||mt.trigger(t[n],an,r).defaultPrevented))"ontouchstart"in document.documentElement&&(a=[]).concat.apply(a,document.body.children).forEach((function(e){return mt.off(e,"mouseover",null,(function(){}))})),t[n].setAttribute("aria-expanded","false"),o._popper&&o._popper.destroy(),s.classList.remove(dn),t[n].classList.remove(dn),xt.removeDataAttribute(s,"popper"),mt.trigger(t[n],sn,r)}}},t.getParentFromElement=function(e){return qe(e)||e.parentNode},t.dataApiKeydownHandler=function(e){if(!(/input|textarea/i.test(e.target.tagName)?e.key===tn||e.key!==en&&(e.key!==on&&e.key!==nn||e.target.closest(fn)):!rn.test(e.key))&&(e.preventDefault(),e.stopPropagation(),!this.disabled&&!this.classList.contains(un))){var n=t.getParentFromElement(this),i=this.classList.contains(dn);if(e.key===en)return(this.matches(_n)?this:Dt(this,_n)[0]).focus(),void t.clearMenus();if(i||e.key!==nn&&e.key!==on)if(i&&e.key!==tn){var o=At(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",n).filter(Ve);if(o.length){var r=o.indexOf(e.target);e.key===nn&&r>0&&r--,e.key===on&&r<o.length-1&&r++,o[r=-1===r?0:r].focus()}}else t.clearMenus();else(this.matches(_n)?this:Dt(this,_n)[0]).click()}},Ne(t,null,[{key:"Default",get:function(){return yn}},{key:"DefaultType",get:function(){return wn}},{key:"DATA_KEY",get:function(){return Zt}}]),t}(gt);mt.on(document,cn,_n,kn.dataApiKeydownHandler),mt.on(document,cn,fn,kn.dataApiKeydownHandler),mt.on(document,ln,kn.clearMenus),mt.on(document,"keyup.bs.dropdown.data-api",kn.clearMenus),mt.on(document,ln,_n,(function(e){e.preventDefault(),e.stopPropagation(),kn.dropdownInterface(this,"toggle")})),mt.on(document,ln,".dropdown form",(function(e){return e.stopPropagation()})),Ze(Gt,kn);var En="modal",Tn="bs.modal",xn="Escape",An={backdrop:!0,keyboard:!0,focus:!0},On={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean"},Ln="hidden.bs.modal",Dn="show.bs.modal",Cn="focusin.bs.modal",Sn="resize.bs.modal",jn="click.dismiss.bs.modal",Nn="keydown.dismiss.bs.modal",Pn="mousedown.dismiss.bs.modal",Mn="modal-open",Rn="fade",In="show",Hn="modal-static",zn=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",Bn=".sticky-top",qn=function(e){function t(t,n){var i;return(i=e.call(this,t)||this)._config=i._getConfig(n),i._dialog=Ot(".modal-dialog",t),i._backdrop=null,i._isShown=!1,i._isBodyOverflowing=!1,i._ignoreBackdropClick=!1,i._isTransitioning=!1,i._scrollbarWidth=0,i}Me(t,e);var n=t.prototype;return n.toggle=function(e){return this._isShown?this.hide():this.show(e)},n.show=function(e){var t=this;if(!this._isShown&&!this._isTransitioning){this._element.classList.contains(Rn)&&(this._isTransitioning=!0);var n=mt.trigger(this._element,Dn,{relatedTarget:e});this._isShown||n.defaultPrevented||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),mt.on(this._element,jn,'[data-bs-dismiss="modal"]',(function(e){return t.hide(e)})),mt.on(this._dialog,Pn,(function(){mt.one(t._element,"mouseup.dismiss.bs.modal",(function(e){e.target===t._element&&(t._ignoreBackdropClick=!0)}))})),this._showBackdrop((function(){return t._showElement(e)})))}},n.hide=function(e){var t=this;if(e&&e.preventDefault(),this._isShown&&!this._isTransitioning&&!mt.trigger(this._element,"hide.bs.modal").defaultPrevented){this._isShown=!1;var n=this._element.classList.contains(Rn);if(n&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),mt.off(document,Cn),this._element.classList.remove(In),mt.off(this._element,jn),mt.off(this._dialog,Pn),n){var i=We(this._element);mt.one(this._element,"transitionend",(function(e){return t._hideModal(e)})),Fe(this._element,i)}else this._hideModal()}},n.dispose=function(){[window,this._element,this._dialog].forEach((function(e){return mt.off(e,".bs.modal")})),e.prototype.dispose.call(this),mt.off(document,Cn),this._config=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._isTransitioning=null,this._scrollbarWidth=null},n.handleUpdate=function(){this._adjustDialog()},n._getConfig=function(e){return e=Pe({},An,e),Ye(En,e,On),e},n._showElement=function(e){var t=this,n=this._element.classList.contains(Rn),i=Ot(".modal-body",this._dialog);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0,i&&(i.scrollTop=0),n&&$e(this._element),this._element.classList.add(In),this._config.focus&&this._enforceFocus();var o=function(){t._config.focus&&t._element.focus(),t._isTransitioning=!1,mt.trigger(t._element,"shown.bs.modal",{relatedTarget:e})};if(n){var r=We(this._dialog);mt.one(this._dialog,"transitionend",o),Fe(this._dialog,r)}else o()},n._enforceFocus=function(){var e=this;mt.off(document,Cn),mt.on(document,Cn,(function(t){document===t.target||e._element===t.target||e._element.contains(t.target)||e._element.focus()}))},n._setEscapeEvent=function(){var e=this;this._isShown?mt.on(this._element,Nn,(function(t){e._config.keyboard&&t.key===xn?(t.preventDefault(),e.hide()):e._config.keyboard||t.key!==xn||e._triggerBackdropTransition()})):mt.off(this._element,Nn)},n._setResizeEvent=function(){var e=this;this._isShown?mt.on(window,Sn,(function(){return e._adjustDialog()})):mt.off(window,Sn)},n._hideModal=function(){var e=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._showBackdrop((function(){document.body.classList.remove(Mn),e._resetAdjustments(),e._resetScrollbar(),mt.trigger(e._element,Ln)}))},n._removeBackdrop=function(){this._backdrop.parentNode.removeChild(this._backdrop),this._backdrop=null},n._showBackdrop=function(e){var t=this,n=this._element.classList.contains(Rn)?Rn:"";if(this._isShown&&this._config.backdrop){if(this._backdrop=document.createElement("div"),this._backdrop.className="modal-backdrop",n&&this._backdrop.classList.add(n),document.body.appendChild(this._backdrop),mt.on(this._element,jn,(function(e){t._ignoreBackdropClick?t._ignoreBackdropClick=!1:e.target===e.currentTarget&&("static"===t._config.backdrop?t._triggerBackdropTransition():t.hide())})),n&&$e(this._backdrop),this._backdrop.classList.add(In),!n)return void e();var i=We(this._backdrop);mt.one(this._backdrop,"transitionend",e),Fe(this._backdrop,i)}else if(!this._isShown&&this._backdrop){this._backdrop.classList.remove(In);var o=function(){t._removeBackdrop(),e()};if(this._element.classList.contains(Rn)){var r=We(this._backdrop);mt.one(this._backdrop,"transitionend",o),Fe(this._backdrop,r)}else o()}else e()},n._triggerBackdropTransition=function(){var e=this;if(!mt.trigger(this._element,"hidePrevented.bs.modal").defaultPrevented){var t=this._element.scrollHeight>document.documentElement.clientHeight;t||(this._element.style.overflowY="hidden"),this._element.classList.add(Hn);var n=We(this._dialog);mt.off(this._element,"transitionend"),mt.one(this._element,"transitionend",(function(){e._element.classList.remove(Hn),t||(mt.one(e._element,"transitionend",(function(){e._element.style.overflowY=""})),Fe(e._element,n))})),Fe(this._element,n),this._element.focus()}},n._adjustDialog=function(){var e=this._element.scrollHeight>document.documentElement.clientHeight;(!this._isBodyOverflowing&&e&&!Ge||this._isBodyOverflowing&&!e&&Ge)&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),(this._isBodyOverflowing&&!e&&!Ge||!this._isBodyOverflowing&&e&&Ge)&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},n._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},n._checkScrollbar=function(){var e=document.body.getBoundingClientRect();this._isBodyOverflowing=Math.round(e.left+e.right)<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},n._setScrollbar=function(){var e=this;this._isBodyOverflowing&&(this._setElementAttributes(zn,"paddingRight",(function(t){return t+e._scrollbarWidth})),this._setElementAttributes(Bn,"marginRight",(function(t){return t-e._scrollbarWidth})),this._setElementAttributes("body","paddingRight",(function(t){return t+e._scrollbarWidth}))),document.body.classList.add(Mn)},n._setElementAttributes=function(e,t,n){At(e).forEach((function(e){var i=e.style[t],o=window.getComputedStyle(e)[t];xt.setDataAttribute(e,t,i),e.style[t]=n(Number.parseFloat(o))+"px"}))},n._resetScrollbar=function(){this._resetElementAttributes(zn,"paddingRight"),this._resetElementAttributes(Bn,"marginRight"),this._resetElementAttributes("body","paddingRight")},n._resetElementAttributes=function(e,t){At(e).forEach((function(e){var n=xt.getDataAttribute(e,t);void 0===n&&e===document.body?e.style[t]="":(xt.removeDataAttribute(e,t),e.style[t]=n)}))},n._getScrollbarWidth=function(){var e=document.createElement("div");e.className="modal-scrollbar-measure",document.body.appendChild(e);var t=e.getBoundingClientRect().width-e.clientWidth;return document.body.removeChild(e),t},t.jQueryInterface=function(e,n){return this.each((function(){var i=nt(this,Tn),o=Pe({},An,xt.getDataAttributes(this),"object"==typeof e&&e?e:{});if(i||(i=new t(this,o)),"string"==typeof e){if(void 0===i[e])throw new TypeError('No method named "'+e+'"');i[e](n)}}))},Ne(t,null,[{key:"Default",get:function(){return An}},{key:"DATA_KEY",get:function(){return Tn}}]),t}(gt);mt.on(document,"click.bs.modal.data-api",'[data-bs-toggle="modal"]',(function(e){var t=this,n=qe(this);"A"!==this.tagName&&"AREA"!==this.tagName||e.preventDefault(),mt.one(n,Dn,(function(e){e.defaultPrevented||mt.one(n,Ln,(function(){Ve(t)&&t.focus()}))}));var i=nt(n,Tn);if(!i){var o=Pe({},xt.getDataAttributes(n),xt.getDataAttributes(this));i=new qn(n,o)}i.toggle(this)})),Ze(En,qn);var Wn=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),Kn=/^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi,Un=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;function Fn(e,t,n){var i;if(!e.length)return e;if(n&&"function"==typeof n)return n(e);for(var o=(new window.DOMParser).parseFromString(e,"text/html"),r=Object.keys(t),a=(i=[]).concat.apply(i,o.body.querySelectorAll("*")),s=function(e,n){var i,o=a[e],s=o.nodeName.toLowerCase();if(!r.includes(s))return o.parentNode.removeChild(o),"continue";var l=(i=[]).concat.apply(i,o.attributes),c=[].concat(t["*"]||[],t[s]||[]);l.forEach((function(e){(function(e,t){var n=e.nodeName.toLowerCase();if(t.includes(n))return!Wn.has(n)||Boolean(Kn.test(e.nodeValue)||Un.test(e.nodeValue));for(var i=t.filter((function(e){return e instanceof RegExp})),o=0,r=i.length;o<r;o++)if(i[o].test(n))return!0;return!1})(e,c)||o.removeAttribute(e.nodeName)}))},l=0,c=a.length;l<c;l++)s(l);return o.body.innerHTML}var Yn="tooltip",Vn="bs.tooltip",Xn=new RegExp("(^|\\s)bs-tooltip\\S+","g"),Qn=new Set(["sanitize","allowList","sanitizeFn"]),$n={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(array|string|function)",container:"(string|element|boolean)",fallbackPlacements:"array",boundary:"(string|element)",customClass:"(string|function)",sanitize:"boolean",sanitizeFn:"(null|function)",allowList:"object",popperConfig:"(null|object|function)"},Jn={AUTO:"auto",TOP:"top",RIGHT:Ge?"left":"right",BOTTOM:"bottom",LEFT:Ge?"right":"left"},Gn={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:[0,0],container:!1,fallbackPlacements:["top","right","bottom","left"],boundary:"clippingParents",customClass:"",sanitize:!0,sanitizeFn:null,allowList:{"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},popperConfig:null},Zn={HIDE:"hide.bs.tooltip",HIDDEN:"hidden.bs.tooltip",SHOW:"show.bs.tooltip",SHOWN:"shown.bs.tooltip",INSERTED:"inserted.bs.tooltip",CLICK:"click.bs.tooltip",FOCUSIN:"focusin.bs.tooltip",FOCUSOUT:"focusout.bs.tooltip",MOUSEENTER:"mouseenter.bs.tooltip",MOUSELEAVE:"mouseleave.bs.tooltip"},ei="fade",ti="show",ni="show",ii="out",oi="hover",ri="focus",ai=function(e){function t(t,n){var o;if(void 0===i)throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");return(o=e.call(this,t)||this)._isEnabled=!0,o._timeout=0,o._hoverState="",o._activeTrigger={},o._popper=null,o.config=o._getConfig(n),o.tip=null,o._setListeners(),o}Me(t,e);var n=t.prototype;return n.enable=function(){this._isEnabled=!0},n.disable=function(){this._isEnabled=!1},n.toggleEnabled=function(){this._isEnabled=!this._isEnabled},n.toggle=function(e){if(this._isEnabled)if(e){var t=this._initializeOnDelegatedTarget(e);t._activeTrigger.click=!t._activeTrigger.click,t._isWithActiveTrigger()?t._enter(null,t):t._leave(null,t)}else{if(this.getTipElement().classList.contains(ti))return void this._leave(null,this);this._enter(null,this)}},n.dispose=function(){clearTimeout(this._timeout),mt.off(this._element,this.constructor.EVENT_KEY),mt.off(this._element.closest(".modal"),"hide.bs.modal",this._hideModalHandler),this.tip&&this.tip.parentNode&&this.tip.parentNode.removeChild(this.tip),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._popper&&this._popper.destroy(),this._popper=null,this.config=null,this.tip=null,e.prototype.dispose.call(this)},n.show=function(){var e=this;if("none"===this._element.style.display)throw new Error("Please use show on visible elements");if(this.isWithContent()&&this._isEnabled){var t=mt.trigger(this._element,this.constructor.Event.SHOW),n=Xe(this._element),i=null===n?this._element.ownerDocument.documentElement.contains(this._element):n.contains(this._element);if(!t.defaultPrevented&&i){var o=this.getTipElement(),r=He(this.constructor.NAME);o.setAttribute("id",r),this._element.setAttribute("aria-describedby",r),this.setContent(),this.config.animation&&o.classList.add(ei);var a="function"==typeof this.config.placement?this.config.placement.call(this,o,this._element):this.config.placement,s=this._getAttachment(a);this._addAttachmentClass(s);var l=this._getContainer();tt(o,this.constructor.DATA_KEY,this),this._element.ownerDocument.documentElement.contains(this.tip)||l.appendChild(o),mt.trigger(this._element,this.constructor.Event.INSERTED),this._popper=Ce(this._element,o,this._getPopperConfig(s)),o.classList.add(ti);var c,u,d="function"==typeof this.config.customClass?this.config.customClass():this.config.customClass;d&&(c=o.classList).add.apply(c,d.split(" ")),"ontouchstart"in document.documentElement&&(u=[]).concat.apply(u,document.body.children).forEach((function(e){mt.on(e,"mouseover",(function(){}))}));var _=function(){var t=e._hoverState;e._hoverState=null,mt.trigger(e._element,e.constructor.Event.SHOWN),t===ii&&e._leave(null,e)};if(this.tip.classList.contains(ei)){var f=We(this.tip);mt.one(this.tip,"transitionend",_),Fe(this.tip,f)}else _()}}},n.hide=function(){var e=this;if(this._popper){var t=this.getTipElement(),n=function(){e._hoverState!==ni&&t.parentNode&&t.parentNode.removeChild(t),e._cleanTipClass(),e._element.removeAttribute("aria-describedby"),mt.trigger(e._element,e.constructor.Event.HIDDEN),e._popper&&(e._popper.destroy(),e._popper=null)};if(!mt.trigger(this._element,this.constructor.Event.HIDE).defaultPrevented){var i;if(t.classList.remove(ti),"ontouchstart"in document.documentElement&&(i=[]).concat.apply(i,document.body.children).forEach((function(e){return mt.off(e,"mouseover",Qe)})),this._activeTrigger.click=!1,this._activeTrigger.focus=!1,this._activeTrigger.hover=!1,this.tip.classList.contains(ei)){var o=We(t);mt.one(t,"transitionend",n),Fe(t,o)}else n();this._hoverState=""}}},n.update=function(){null!==this._popper&&this._popper.update()},n.isWithContent=function(){return Boolean(this.getTitle())},n.getTipElement=function(){if(this.tip)return this.tip;var e=document.createElement("div");return e.innerHTML=this.config.template,this.tip=e.children[0],this.tip},n.setContent=function(){var e=this.getTipElement();this.setElementContent(Ot(".tooltip-inner",e),this.getTitle()),e.classList.remove(ei,ti)},n.setElementContent=function(e,t){if(null!==e)return"object"==typeof t&&Ue(t)?(t.jquery&&(t=t[0]),void(this.config.html?t.parentNode!==e&&(e.innerHTML="",e.appendChild(t)):e.textContent=t.textContent)):void(this.config.html?(this.config.sanitize&&(t=Fn(t,this.config.allowList,this.config.sanitizeFn)),e.innerHTML=t):e.textContent=t)},n.getTitle=function(){var e=this._element.getAttribute("data-bs-original-title");return e||(e="function"==typeof this.config.title?this.config.title.call(this._element):this.config.title),e},n.updateAttachment=function(e){return"right"===e?"end":"left"===e?"start":e},n._initializeOnDelegatedTarget=function(e,t){var n=this.constructor.DATA_KEY;return(t=t||nt(e.delegateTarget,n))||(t=new this.constructor(e.delegateTarget,this._getDelegateConfig()),tt(e.delegateTarget,n,t)),t},n._getOffset=function(){var e=this,t=this.config.offset;return"string"==typeof t?t.split(",").map((function(e){return Number.parseInt(e,10)})):"function"==typeof t?function(n){return t(n,e._element)}:t},n._getPopperConfig=function(e){var t=this,n={placement:e,modifiers:[{name:"flip",options:{altBoundary:!0,fallbackPlacements:this.config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this.config.boundary}},{name:"arrow",options:{element:"."+this.constructor.NAME+"-arrow"}},{name:"onChange",enabled:!0,phase:"afterWrite",fn:function(e){return t._handlePopperPlacementChange(e)}}],onFirstUpdate:function(e){e.options.placement!==e.placement&&t._handlePopperPlacementChange(e)}};return Pe({},n,"function"==typeof this.config.popperConfig?this.config.popperConfig(n):this.config.popperConfig)},n._addAttachmentClass=function(e){this.getTipElement().classList.add("bs-tooltip-"+this.updateAttachment(e))},n._getContainer=function(){return!1===this.config.container?document.body:Ue(this.config.container)?this.config.container:Ot(this.config.container)},n._getAttachment=function(e){return Jn[e.toUpperCase()]},n._setListeners=function(){var e=this;this.config.trigger.split(" ").forEach((function(t){if("click"===t)mt.on(e._element,e.constructor.Event.CLICK,e.config.selector,(function(t){return e.toggle(t)}));else if("manual"!==t){var n=t===oi?e.constructor.Event.MOUSEENTER:e.constructor.Event.FOCUSIN,i=t===oi?e.constructor.Event.MOUSELEAVE:e.constructor.Event.FOCUSOUT;mt.on(e._element,n,e.config.selector,(function(t){return e._enter(t)})),mt.on(e._element,i,e.config.selector,(function(t){return e._leave(t)}))}})),this._hideModalHandler=function(){e._element&&e.hide()},mt.on(this._element.closest(".modal"),"hide.bs.modal",this._hideModalHandler),this.config.selector?this.config=Pe({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},n._fixTitle=function(){var e=this._element.getAttribute("title"),t=typeof this._element.getAttribute("data-bs-original-title");(e||"string"!==t)&&(this._element.setAttribute("data-bs-original-title",e||""),!e||this._element.getAttribute("aria-label")||this._element.textContent||this._element.setAttribute("aria-label",e),this._element.setAttribute("title",""))},n._enter=function(e,t){t=this._initializeOnDelegatedTarget(e,t),e&&(t._activeTrigger["focusin"===e.type?ri:oi]=!0),t.getTipElement().classList.contains(ti)||t._hoverState===ni?t._hoverState=ni:(clearTimeout(t._timeout),t._hoverState=ni,t.config.delay&&t.config.delay.show?t._timeout=setTimeout((function(){t._hoverState===ni&&t.show()}),t.config.delay.show):t.show())},n._leave=function(e,t){t=this._initializeOnDelegatedTarget(e,t),e&&(t._activeTrigger["focusout"===e.type?ri:oi]=!1),t._isWithActiveTrigger()||(clearTimeout(t._timeout),t._hoverState=ii,t.config.delay&&t.config.delay.hide?t._timeout=setTimeout((function(){t._hoverState===ii&&t.hide()}),t.config.delay.hide):t.hide())},n._isWithActiveTrigger=function(){for(var e in this._activeTrigger)if(this._activeTrigger[e])return!0;return!1},n._getConfig=function(e){var t=xt.getDataAttributes(this._element);return Object.keys(t).forEach((function(e){Qn.has(e)&&delete t[e]})),e&&"object"==typeof e.container&&e.container.jquery&&(e.container=e.container[0]),"number"==typeof(e=Pe({},this.constructor.Default,t,"object"==typeof e&&e?e:{})).delay&&(e.delay={show:e.delay,hide:e.delay}),"number"==typeof e.title&&(e.title=e.title.toString()),"number"==typeof e.content&&(e.content=e.content.toString()),Ye(Yn,e,this.constructor.DefaultType),e.sanitize&&(e.template=Fn(e.template,e.allowList,e.sanitizeFn)),e},n._getDelegateConfig=function(){var e={};if(this.config)for(var t in this.config)this.constructor.Default[t]!==this.config[t]&&(e[t]=this.config[t]);return e},n._cleanTipClass=function(){var e=this.getTipElement(),t=e.getAttribute("class").match(Xn);null!==t&&t.length>0&&t.map((function(e){return e.trim()})).forEach((function(t){return e.classList.remove(t)}))},n._handlePopperPlacementChange=function(e){var t=e.state;t&&(this.tip=t.elements.popper,this._cleanTipClass(),this._addAttachmentClass(this._getAttachment(t.placement)))},t.jQueryInterface=function(e){return this.each((function(){var n=nt(this,Vn),i="object"==typeof e&&e;if((n||!/dispose|hide/.test(e))&&(n||(n=new t(this,i)),"string"==typeof e)){if(void 0===n[e])throw new TypeError('No method named "'+e+'"');n[e]()}}))},Ne(t,null,[{key:"Default",get:function(){return Gn}},{key:"NAME",get:function(){return Yn}},{key:"DATA_KEY",get:function(){return Vn}},{key:"Event",get:function(){return Zn}},{key:"EVENT_KEY",get:function(){return".bs.tooltip"}},{key:"DefaultType",get:function(){return $n}}]),t}(gt);Ze(Yn,ai);var si="popover",li="bs.popover",ci=new RegExp("(^|\\s)bs-popover\\S+","g"),ui=Pe({},ai.Default,{placement:"right",offset:[0,8],trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),di=Pe({},ai.DefaultType,{content:"(string|element|function)"}),_i={HIDE:"hide.bs.popover",HIDDEN:"hidden.bs.popover",SHOW:"show.bs.popover",SHOWN:"shown.bs.popover",INSERTED:"inserted.bs.popover",CLICK:"click.bs.popover",FOCUSIN:"focusin.bs.popover",FOCUSOUT:"focusout.bs.popover",MOUSEENTER:"mouseenter.bs.popover",MOUSELEAVE:"mouseleave.bs.popover"},fi=function(e){function t(){return e.apply(this,arguments)||this}Me(t,e);var n=t.prototype;return n.isWithContent=function(){return this.getTitle()||this._getContent()},n.setContent=function(){var e=this.getTipElement();this.setElementContent(Ot(".popover-header",e),this.getTitle());var t=this._getContent();"function"==typeof t&&(t=t.call(this._element)),this.setElementContent(Ot(".popover-body",e),t),e.classList.remove("fade","show")},n._addAttachmentClass=function(e){this.getTipElement().classList.add("bs-popover-"+this.updateAttachment(e))},n._getContent=function(){return this._element.getAttribute("data-bs-content")||this.config.content},n._cleanTipClass=function(){var e=this.getTipElement(),t=e.getAttribute("class").match(ci);null!==t&&t.length>0&&t.map((function(e){return e.trim()})).forEach((function(t){return e.classList.remove(t)}))},t.jQueryInterface=function(e){return this.each((function(){var n=nt(this,li),i="object"==typeof e?e:null;if((n||!/dispose|hide/.test(e))&&(n||(n=new t(this,i),tt(this,li,n)),"string"==typeof e)){if(void 0===n[e])throw new TypeError('No method named "'+e+'"');n[e]()}}))},Ne(t,null,[{key:"Default",get:function(){return ui}},{key:"NAME",get:function(){return si}},{key:"DATA_KEY",get:function(){return li}},{key:"Event",get:function(){return _i}},{key:"EVENT_KEY",get:function(){return".bs.popover"}},{key:"DefaultType",get:function(){return di}}]),t}(ai);Ze(si,fi);var hi="scrollspy",pi="bs.scrollspy",mi={offset:10,method:"auto",target:""},gi={offset:"number",method:"string",target:"(string|element)"},bi="dropdown-item",vi="active",yi="position",wi=function(e){function t(t,n){var i;return(i=e.call(this,t)||this)._scrollElement="BODY"===t.tagName?window:t,i._config=i._getConfig(n),i._selector=i._config.target+" .nav-link, "+i._config.target+" .list-group-item, "+i._config.target+" ."+bi,i._offsets=[],i._targets=[],i._activeTarget=null,i._scrollHeight=0,mt.on(i._scrollElement,"scroll.bs.scrollspy",(function(){return i._process()})),i.refresh(),i._process(),i}Me(t,e);var n=t.prototype;return n.refresh=function(){var e=this,t=this._scrollElement===this._scrollElement.window?"offset":yi,n="auto"===this._config.method?t:this._config.method,i=n===yi?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),At(this._selector).map((function(e){var t=Be(e),o=t?Ot(t):null;if(o){var r=o.getBoundingClientRect();if(r.width||r.height)return[xt[n](o).top+i,t]}return null})).filter((function(e){return e})).sort((function(e,t){return e[0]-t[0]})).forEach((function(t){e._offsets.push(t[0]),e._targets.push(t[1])}))},n.dispose=function(){e.prototype.dispose.call(this),mt.off(this._scrollElement,".bs.scrollspy"),this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},n._getConfig=function(e){if("string"!=typeof(e=Pe({},mi,"object"==typeof e&&e?e:{})).target&&Ue(e.target)){var t=e.target.id;t||(t=He(hi),e.target.id=t),e.target="#"+t}return Ye(hi,e,gi),e},n._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},n._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},n._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},n._process=function(){var e=this._getScrollTop()+this._config.offset,t=this._getScrollHeight(),n=this._config.offset+t-this._getOffsetHeight();if(this._scrollHeight!==t&&this.refresh(),e>=n){var i=this._targets[this._targets.length-1];this._activeTarget!==i&&this._activate(i)}else{if(this._activeTarget&&e<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(var o=this._offsets.length;o--;)this._activeTarget!==this._targets[o]&&e>=this._offsets[o]&&(void 0===this._offsets[o+1]||e<this._offsets[o+1])&&this._activate(this._targets[o])}},n._activate=function(e){this._activeTarget=e,this._clear();var t=this._selector.split(",").map((function(t){return t+'[data-bs-target="'+e+'"],'+t+'[href="'+e+'"]'})),n=Ot(t.join(","));n.classList.contains(bi)?(Ot(".dropdown-toggle",n.closest(".dropdown")).classList.add(vi),n.classList.add(vi)):(n.classList.add(vi),function(e,t){for(var n=[],i=e.parentNode;i&&i.nodeType===Node.ELEMENT_NODE&&3!==i.nodeType;)i.matches(t)&&n.push(i),i=i.parentNode;return n}(n,".nav, .list-group").forEach((function(e){Dt(e,".nav-link, .list-group-item").forEach((function(e){return e.classList.add(vi)})),Dt(e,".nav-item").forEach((function(e){Lt(e,".nav-link").forEach((function(e){return e.classList.add(vi)}))}))}))),mt.trigger(this._scrollElement,"activate.bs.scrollspy",{relatedTarget:e})},n._clear=function(){At(this._selector).filter((function(e){return e.classList.contains(vi)})).forEach((function(e){return e.classList.remove(vi)}))},t.jQueryInterface=function(e){return this.each((function(){var n=nt(this,pi);if(n||(n=new t(this,"object"==typeof e&&e)),"string"==typeof e){if(void 0===n[e])throw new TypeError('No method named "'+e+'"');n[e]()}}))},Ne(t,null,[{key:"Default",get:function(){return mi}},{key:"DATA_KEY",get:function(){return pi}}]),t}(gt);mt.on(window,"load.bs.scrollspy.data-api",(function(){At('[data-bs-spy="scroll"]').forEach((function(e){return new wi(e,xt.getDataAttributes(e))}))})),Ze(hi,wi);var ki="bs.tab",Ei="active",Ti="fade",xi="show",Ai=".active",Oi=":scope > li > .active",Li=function(e){function t(){return e.apply(this,arguments)||this}Me(t,e);var n=t.prototype;return n.show=function(){var e=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&this._element.classList.contains(Ei)||this._element.classList.contains("disabled"))){var t,n=qe(this._element),i=this._element.closest(".nav, .list-group");if(i){var o="UL"===i.nodeName||"OL"===i.nodeName?Oi:Ai;t=(t=At(o,i))[t.length-1]}var r=t?mt.trigger(t,"hide.bs.tab",{relatedTarget:this._element}):null;if(!(mt.trigger(this._element,"show.bs.tab",{relatedTarget:t}).defaultPrevented||null!==r&&r.defaultPrevented)){this._activate(this._element,i);var a=function(){mt.trigger(t,"hidden.bs.tab",{relatedTarget:e._element}),mt.trigger(e._element,"shown.bs.tab",{relatedTarget:t})};n?this._activate(n,n.parentNode,a):a()}}},n._activate=function(e,t,n){var i=this,o=(!t||"UL"!==t.nodeName&&"OL"!==t.nodeName?Lt(t,Ai):At(Oi,t))[0],r=n&&o&&o.classList.contains(Ti),a=function(){return i._transitionComplete(e,o,n)};if(o&&r){var s=We(o);o.classList.remove(xi),mt.one(o,"transitionend",a),Fe(o,s)}else a()},n._transitionComplete=function(e,t,n){if(t){t.classList.remove(Ei);var i=Ot(":scope > .dropdown-menu .active",t.parentNode);i&&i.classList.remove(Ei),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!1)}e.classList.add(Ei),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!0),$e(e),e.classList.contains(Ti)&&e.classList.add(xi),e.parentNode&&e.parentNode.classList.contains("dropdown-menu")&&(e.closest(".dropdown")&&At(".dropdown-toggle").forEach((function(e){return e.classList.add(Ei)})),e.setAttribute("aria-expanded",!0)),n&&n()},t.jQueryInterface=function(e){return this.each((function(){var n=nt(this,ki)||new t(this);if("string"==typeof e){if(void 0===n[e])throw new TypeError('No method named "'+e+'"');n[e]()}}))},Ne(t,null,[{key:"DATA_KEY",get:function(){return ki}}]),t}(gt);mt.on(document,"click.bs.tab.data-api",'[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',(function(e){e.preventDefault(),(nt(this,ki)||new Li(this)).show()})),Ze("tab",Li);var Di="toast",Ci="bs.toast",Si="click.dismiss.bs.toast",ji="hide",Ni="show",Pi="showing",Mi={animation:"boolean",autohide:"boolean",delay:"number"},Ri={animation:!0,autohide:!0,delay:5e3},Ii=function(e){function t(t,n){var i;return(i=e.call(this,t)||this)._config=i._getConfig(n),i._timeout=null,i._setListeners(),i}Me(t,e);var n=t.prototype;return n.show=function(){var e=this;if(!mt.trigger(this._element,"show.bs.toast").defaultPrevented){this._clearTimeout(),this._config.animation&&this._element.classList.add("fade");var t=function(){e._element.classList.remove(Pi),e._element.classList.add(Ni),mt.trigger(e._element,"shown.bs.toast"),e._config.autohide&&(e._timeout=setTimeout((function(){e.hide()}),e._config.delay))};if(this._element.classList.remove(ji),$e(this._element),this._element.classList.add(Pi),this._config.animation){var n=We(this._element);mt.one(this._element,"transitionend",t),Fe(this._element,n)}else t()}},n.hide=function(){var e=this;if(this._element.classList.contains(Ni)&&!mt.trigger(this._element,"hide.bs.toast").defaultPrevented){var t=function(){e._element.classList.add(ji),mt.trigger(e._element,"hidden.bs.toast")};if(this._element.classList.remove(Ni),this._config.animation){var n=We(this._element);mt.one(this._element,"transitionend",t),Fe(this._element,n)}else t()}},n.dispose=function(){this._clearTimeout(),this._element.classList.contains(Ni)&&this._element.classList.remove(Ni),mt.off(this._element,Si),e.prototype.dispose.call(this),this._config=null},n._getConfig=function(e){return e=Pe({},Ri,xt.getDataAttributes(this._element),"object"==typeof e&&e?e:{}),Ye(Di,e,this.constructor.DefaultType),e},n._setListeners=function(){var e=this;mt.on(this._element,Si,'[data-bs-dismiss="toast"]',(function(){return e.hide()}))},n._clearTimeout=function(){clearTimeout(this._timeout),this._timeout=null},t.jQueryInterface=function(e){return this.each((function(){var n=nt(this,Ci);if(n||(n=new t(this,"object"==typeof e&&e)),"string"==typeof e){if(void 0===n[e])throw new TypeError('No method named "'+e+'"');n[e](this)}}))},Ne(t,null,[{key:"DefaultType",get:function(){return Mi}},{key:"Default",get:function(){return Ri}},{key:"DATA_KEY",get:function(){return Ci}}]),t}(gt);Ze(Di,Ii)},310:(e,t,n)=>{"use strict";var i=n(258),o=n(930),r=n(941);e.exports=function(e,t){var n=r(e.utils.assign({},{defs:{},shortcuts:{},enabled:[]},t||{}));e.renderer.rules.emoji=i,e.core.ruler.push("emoji",o(e,n.defs,n.shortcuts,n.scanRE,n.replaceRE))}},735:(e,t,n)=>{"use strict";var i=n(550),o=n(219),r=n(310);e.exports=function(e,t){var n={defs:i,shortcuts:o,enabled:[]},a=e.utils.assign({},n,t||{});r(e,a)}},219:e=>{"use strict";e.exports={angry:[">:(",">:-("],blush:[':")',':-")'],broken_heart:["</3","<\\3"],confused:[":/",":-/"],cry:[":'(",":'-(",":,(",":,-("],frowning:[":(",":-("],heart:["<3"],imp:["]:(","]:-("],innocent:["o:)","O:)","o:-)","O:-)","0:)","0:-)"],joy:[":')",":'-)",":,)",":,-)",":'D",":'-D",":,D",":,-D"],kissing:[":*",":-*"],laughing:["x-)","X-)"],neutral_face:[":|",":-|"],open_mouth:[":o",":-o",":O",":-O"],rage:[":@",":-@"],smile:[":D",":-D"],smiley:[":)",":-)"],smiling_imp:["]:)","]:-)"],sob:[":,'(",":,'-(",";(",";-("],stuck_out_tongue:[":P",":-P"],sunglasses:["8-)","B-)"],sweat:[",:(",",:-("],sweat_smile:[",:)",",:-)"],unamused:[":s",":-S",":z",":-Z",":$",":-$"],wink:[";)",";-)"]}},941:e=>{"use strict";e.exports=function(e){var t,n=e.defs;e.enabled.length&&(n=Object.keys(n).reduce((function(t,i){return e.enabled.indexOf(i)>=0&&(t[i]=n[i]),t}),{})),t=Object.keys(e.shortcuts).reduce((function(t,i){return n[i]?Array.isArray(e.shortcuts[i])?(e.shortcuts[i].forEach((function(e){t[e]=i})),t):(t[e.shortcuts[i]]=i,t):t}),{});var i,o=Object.keys(n);i=0===o.length?"^$":o.map((function(e){return":"+e+":"})).concat(Object.keys(t)).sort().reverse().map((function(e){return e.replace(/[.?*+^$[\]\\(){}|-]/g,"\\$&")})).join("|");var r=RegExp(i),a=RegExp(i,"g");return{defs:n,shortcuts:t,scanRE:r,replaceRE:a}}},258:e=>{"use strict";e.exports=function(e,t){return e[t].content}},930:e=>{"use strict";e.exports=function(e,t,n,i,o){var r=e.utils.arrayReplaceAt,a=e.utils.lib.ucmicro,s=new RegExp([a.Z.source,a.P.source,a.Cc.source].join("|"));function l(e,i,r){var a,l=0,c=[];return e.replace(o,(function(i,o,u){var d;if(n.hasOwnProperty(i)){if(d=n[i],o>0&&!s.test(u[o-1]))return;if(o+i.length<u.length&&!s.test(u[o+i.length]))return}else d=i.slice(1,-1);o>l&&((a=new r("text","",0)).content=e.slice(l,o),c.push(a)),(a=new r("emoji","",0)).markup=d,a.content=t[d],c.push(a),l=o+i.length})),l<e.length&&((a=new r("text","",0)).content=e.slice(l),c.push(a)),c}return function(e){var t,n,o,a,s,c=e.tokens,u=0;for(n=0,o=c.length;n<o;n++)if("inline"===c[n].type)for(t=(a=c[n].children).length-1;t>=0;t--)"link_open"!==(s=a[t]).type&&"link_close"!==s.type||"auto"===s.info&&(u-=s.nesting),"text"===s.type&&0===u&&i.test(s.content)&&(c[n].children=a=r(a,t,l(s.content,s.level,e.Token)))}}},49:(e,t,n)=>{"use strict";var i=Object.prototype.hasOwnProperty;function o(e,t){return Array.isArray(e)?function(e,t){for(var n,i="",r="",a=Array.isArray(t),s=0;s<e.length;s++)(n=o(e[s]))&&(a&&t[s]&&(n=l(n)),i=i+r+n,r=" ");return i}(e,t):e&&"object"==typeof e?function(e){var t="",n="";for(var o in e)o&&e[o]&&i.call(e,o)&&(t=t+n+o,n=" ");return t}(e):e||""}function r(e){if(!e)return"";if("object"==typeof e){var t="";for(var n in e)i.call(e,n)&&(t=t+n+":"+e[n]+";");return t}return e+""}function a(e,t,n,i){if(!1===t||null==t||!t&&("class"===e||"style"===e))return"";if(!0===t)return" "+(i?e:e+'="'+e+'"');var o=typeof t;return"object"!==o&&"function"!==o||"function"!=typeof t.toJSON||(t=t.toJSON()),"string"==typeof t||(t=JSON.stringify(t),n||-1===t.indexOf('"'))?(n&&(t=l(t))," "+e+'="'+t+'"'):" "+e+"='"+t.replace(/'/g,"&#39;")+"'"}t.merge=function e(t,n){if(1===arguments.length){for(var i=t[0],o=1;o<t.length;o++)i=e(i,t[o]);return i}for(var a in n)if("class"===a){var s=t[a]||[];t[a]=(Array.isArray(s)?s:[s]).concat(n[a]||[])}else if("style"===a){s=(s=r(t[a]))&&";"!==s[s.length-1]?s+";":s;var l=r(n[a]);l=l&&";"!==l[l.length-1]?l+";":l,t[a]=s+l}else t[a]=n[a];return t},t.classes=o,t.style=r,t.attr=a,t.attrs=function(e,t){var n="";for(var s in e)if(i.call(e,s)){var l=e[s];if("class"===s){n=a(s,l=o(l),!1,t)+n;continue}"style"===s&&(l=r(l)),n+=a(s,l,!1,t)}return n};var s=/["&<>]/;function l(e){var t=""+e,n=s.exec(t);if(!n)return e;var i,o,r,a="";for(i=n.index,o=0;i<t.length;i++){switch(t.charCodeAt(i)){case 34:r="&quot;";break;case 38:r="&amp;";break;case 60:r="&lt;";break;case 62:r="&gt;";break;default:continue}o!==i&&(a+=t.substring(o,i)),o=i+1,a+=r}return o!==i?a+t.substring(o,i):a}t.escape=l,t.rethrow=function e(t,i,o,r){if(!(t instanceof Error))throw t;if(!("undefined"==typeof window&&i||r))throw t.message+=" on line "+o,t;try{r=r||n(993).readFileSync(i,"utf8")}catch(n){e(t,null,o)}var a=3,s=r.split("\n"),l=Math.max(o-a,0),c=Math.min(s.length,o+a);a=s.slice(l,c).map((function(e,t){var n=t+l+1;return(n==o?"  > ":"    ")+n+"| "+e})).join("\n"),t.path=i;try{t.message=(i||"Pug")+":"+o+"\n"+a+"\n\n"+t.message}catch(e){}throw t}},864:(e,t,n)=>{"use strict";n(527);const i=n(298);document.body.onload=i.MessageController.init},699:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MesgPrinterConstants=void 0;class n{}t.MesgPrinterConstants=n,n.PRINTER_READY_EVENT_NAME="printerReady"},420:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.MesgPrinterMessageTypes=void 0,(n=t.MesgPrinterMessageTypes||(t.MesgPrinterMessageTypes={})).ADD_MESSAGE="AddMessage",n.ADD_ERROR="AddError",n.ADD_WARN="AddWarn"},298:function(e,t,n){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MessageController=void 0;const o=i(n(239)),r=n(922),a=i(n(470)),s=i(n(418)),l=i(n(735)),c=n(699),u=n(420),d=n(795);class _{constructor(e){e.addEventListener("message",this.manageMessage.bind(this)),this.mesgQueue=document.getElementById("mesg-queue"),this.markdown=new a.default({html:!0,xhtmlOut:!0,breaks:!0,typographer:!0}),this.markdown.use(l.default),this.markdown.renderer.rules.emoji=(e,t)=>s.default.parse(e[t].content,_.EMOJI_PARAMS)}static get instance(){return null==_.inst&&(_.inst=new _(window)),_.inst}static init(){fetch(`https://${_.PARENT_RESOURCE_NAME}/${c.MesgPrinterConstants.PRINTER_READY_EVENT_NAME}`,{method:"POST",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify({code:200})}).then((()=>{_.inst=_.instance})).catch(console.error)}manageMessage(e){switch(e.data.type){case u.MesgPrinterMessageTypes.ADD_MESSAGE:this.addMessage(e.data.message,e.data.params);break;case u.MesgPrinterMessageTypes.ADD_ERROR:this.addError(e.data.message,e.data.params);break;case u.MesgPrinterMessageTypes.ADD_WARN:this.addWarn(e.data.message,e.data.params);break;default:throw new Error(`${e.data.type} is not a valid event`)}}addMessage(e,t){return this.addNewMessage(e,"text-light",t)}addError(e,t){return this.addNewMessage(e,"text-danger font-weight-bold",t)}addWarn(e,t){return this.addNewMessage(e,"text-warning font-weight-bold",t)}addNewMessage(e,t,{ressourceName:n,ressourceColor:i,holdTime:a}){let s=this.mesgQueue.insertBefore(r.Tools.parseToHTML(o.default({id:`${n}_${Date.now()}`,ressourceName:n,rgbHex:r.Tools.rgbToHex(i[0],i[1],i[2]),msgClass:t,msg:this.markdown.render(e),msgTextColorClass:r.Tools.getContrastingColor(i,"badge-dark","badge-light")})),this.mesgQueue.firstChild),l=new d.Collapse(s,{toggle:!1});s.addEventListener("shown.bs.collapse",(()=>{s.addEventListener("hidden.bs.collapse",(()=>{l.dispose(),s.parentElement.removeChild(s)}),{once:!0})}),{once:!0}),l.hide(),setTimeout((()=>{l.hide()}),a+_.COLLAPSE_TIME),setTimeout((()=>{l.show()}),1)}}t.MessageController=_,_.COLLAPSE_TIME=350,_.EMOJI_PARAMS={folder:"svg",ext:".svg"},_.PARENT_RESOURCE_NAME=GetParentResourceName()},922:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Tools=void 0;class n{static getContrastingColor(e,t,i){let o,[r,a,s]=e;return r/=255,s/=255,a/=255,r=r<=.03928?r/12.92:Math.pow((r+.055)/1.055,2.4),a=a<=.03928?a/12.92:Math.pow((a+.055)/1.055,2.4),s=s<=.03928?s/12.92:Math.pow((s+.055)/1.055,2.4),o=.2126*r+.7152*a+.0722*s,o<n.THRESHOLD?t:i}static rgbToHex(e,t,n){return((1<<24)+(e<<16)+(t<<8)+n).toString(16).slice(1)}static parseToHTML(e){let t=document.implementation.createHTMLDocument();return t.body.innerHTML=e,t.body.children[0]}}t.Tools=n,n.THRESHOLD=.43},470:e=>{"use strict";e.exports=markdownit},418:e=>{"use strict";e.exports=twemoji},993:()=>{}},t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={exports:{}};return e[i].call(o.exports,o,o.exports,n),o.exports}n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(864)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,